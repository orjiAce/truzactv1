[{"C:\\reactApp\\truzactv1\\src\\index.js":"1","C:\\reactApp\\truzactv1\\src\\reportWebVitals.js":"2","C:\\reactApp\\truzactv1\\src\\App.js":"3","C:\\reactApp\\truzactv1\\src\\serviceWorkerRegistration.js":"4","C:\\reactApp\\truzactv1\\src\\redux\\store.js":"5","C:\\reactApp\\truzactv1\\src\\redux\\types.js":"6","C:\\reactApp\\truzactv1\\src\\ErrorBoundary\\Error-boundary.component.js":"7","C:\\reactApp\\truzactv1\\src\\redux\\actions\\userActions.js":"8","C:\\reactApp\\truzactv1\\src\\redux\\reducers\\root-reducer.js":"9","C:\\reactApp\\truzactv1\\src\\pages\\Savings\\Savings.js":"10","C:\\reactApp\\truzactv1\\src\\pages\\Wallets\\Wallets.js":"11","C:\\reactApp\\truzactv1\\src\\pages\\Transactions\\Transactions.js":"12","C:\\reactApp\\truzactv1\\src\\pages\\Security\\Security.js":"13","C:\\reactApp\\truzactv1\\src\\pages\\Auth\\Auth.js":"14","C:\\reactApp\\truzactv1\\src\\pages\\Profile\\Profile.js":"15","C:\\reactApp\\truzactv1\\src\\pages\\Dashboard\\Dashboard.jsx":"16","C:\\reactApp\\truzactv1\\src\\pages\\Home\\Home.js":"17","C:\\reactApp\\truzactv1\\src\\redux\\reducers\\userReducer.js":"18","C:\\reactApp\\truzactv1\\src\\redux\\reducers\\dataReducer.js":"19","C:\\reactApp\\truzactv1\\src\\components\\MobTop.js":"20","C:\\reactApp\\truzactv1\\src\\components\\Footer.js":"21","C:\\reactApp\\truzactv1\\src\\components\\Notification.js":"22","C:\\reactApp\\truzactv1\\src\\components\\Tab-Pane.js":"23","C:\\reactApp\\truzactv1\\src\\components\\Button.js":"24","C:\\reactApp\\truzactv1\\src\\components\\TextInput.js":"25","C:\\reactApp\\truzactv1\\src\\components\\TransactionFeed.js":"26","C:\\reactApp\\truzactv1\\src\\Data\\Porfolio.js":"27","C:\\reactApp\\truzactv1\\src\\components\\MobNav.js":"28","C:\\reactApp\\truzactv1\\src\\components\\Tab.js":"29","C:\\reactApp\\truzactv1\\src\\redux\\actions\\dataActions.js":"30","C:\\reactApp\\truzactv1\\src\\components\\Menu.js":"31","C:\\reactApp\\truzactv1\\src\\components\\Portfolio.js":"32","C:\\reactApp\\truzactv1\\src\\components\\PriceHistory.js":"33","C:\\reactApp\\truzactv1\\src\\Data-Center\\MobileMenu.js":"34","C:\\reactApp\\truzactv1\\src\\components\\AuthRoute.js":"35","C:\\reactApp\\truzactv1\\src\\components\\AuthRouteUser.js":"36","C:\\reactApp\\truzactv1\\src\\components\\Modal.js":"37","C:\\reactApp\\truzactv1\\src\\pages\\Save\\Save.js":"38","C:\\reactApp\\truzactv1\\src\\pages\\NotFound\\NotFound.js":"39","C:\\reactApp\\truzactv1\\src\\pages\\BuySell\\BuySell.js":"40","C:\\reactApp\\truzactv1\\src\\components\\DropDown.js":"41"},{"size":1542,"mtime":1609890981130,"results":"42","hashOfConfig":"43"},{"size":364,"mtime":1608489009306,"results":"44","hashOfConfig":"43"},{"size":3868,"mtime":1610051772532,"results":"45","hashOfConfig":"43"},{"size":5064,"mtime":1608489009306,"results":"46","hashOfConfig":"43"},{"size":795,"mtime":1609529468177,"results":"47","hashOfConfig":"43"},{"size":634,"mtime":1610065435342,"results":"48","hashOfConfig":"43"},{"size":1228,"mtime":1606473155772,"results":"49","hashOfConfig":"43"},{"size":4756,"mtime":1610324980571,"results":"50","hashOfConfig":"43"},{"size":912,"mtime":1609552204384,"results":"51","hashOfConfig":"43"},{"size":5025,"mtime":1609762566320,"results":"52","hashOfConfig":"43"},{"size":6369,"mtime":1609889408330,"results":"53","hashOfConfig":"43"},{"size":7223,"mtime":1610323750830,"results":"54","hashOfConfig":"43"},{"size":21644,"mtime":1610221278739,"results":"55","hashOfConfig":"43"},{"size":17266,"mtime":1610052072851,"results":"56","hashOfConfig":"43"},{"size":16731,"mtime":1609547697691,"results":"57","hashOfConfig":"43"},{"size":19072,"mtime":1610325263863,"results":"58","hashOfConfig":"43"},{"size":35795,"mtime":1610325173445,"results":"59","hashOfConfig":"43"},{"size":2227,"mtime":1610066153004,"results":"60","hashOfConfig":"43"},{"size":949,"mtime":1609355790367,"results":"61","hashOfConfig":"43"},{"size":1248,"mtime":1610034633999,"results":"62","hashOfConfig":"43"},{"size":1188,"mtime":1606473155897,"results":"63","hashOfConfig":"43"},{"size":3907,"mtime":1610286579189,"results":"64","hashOfConfig":"43"},{"size":243,"mtime":1606735809728,"results":"65","hashOfConfig":"43"},{"size":532,"mtime":1606753282772,"results":"66","hashOfConfig":"43"},{"size":1101,"mtime":1609944892574,"results":"67","hashOfConfig":"43"},{"size":1348,"mtime":1606754366459,"results":"68","hashOfConfig":"43"},{"size":1489,"mtime":1610282632920,"results":"69","hashOfConfig":"43"},{"size":5812,"mtime":1610010510659,"results":"70","hashOfConfig":"43"},{"size":2873,"mtime":1607032641731,"results":"71","hashOfConfig":"43"},{"size":335,"mtime":1609355790321,"results":"72","hashOfConfig":"43"},{"size":7542,"mtime":1610324419863,"results":"73","hashOfConfig":"43"},{"size":621,"mtime":1608155630186,"results":"74","hashOfConfig":"43"},{"size":4211,"mtime":1610323419723,"results":"75","hashOfConfig":"43"},{"size":2324,"mtime":1609456642412,"results":"76","hashOfConfig":"43"},{"size":530,"mtime":1610035084905,"results":"77","hashOfConfig":"43"},{"size":568,"mtime":1610035084924,"results":"78","hashOfConfig":"43"},{"size":2833,"mtime":1609774666567,"results":"79","hashOfConfig":"43"},{"size":14707,"mtime":1609891606414,"results":"80","hashOfConfig":"43"},{"size":173,"mtime":1609753234137,"results":"81","hashOfConfig":"43"},{"size":833,"mtime":1609867059694,"results":"82","hashOfConfig":"43"},{"size":1975,"mtime":1610321394183,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"tcdvu3",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"86"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"86"},"C:\\reactApp\\truzactv1\\src\\index.js",[],["191","192"],"C:\\reactApp\\truzactv1\\src\\reportWebVitals.js",[],"C:\\reactApp\\truzactv1\\src\\App.js",["193","194","195","196","197"],"import React, {Suspense, lazy} from \"react\";\nimport {BrowserRouter, Route, Switch, NavLink, useLocation} from \"react-router-dom\";\nimport './App.scss';\n\nimport ErrorBoundary from \"./ErrorBoundary/Error-boundary.component\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport Loader from 'react-loader-spinner'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {store} from './redux/store'\nimport axios from 'axios'\nimport {SET_AUTHENTICATED} from './redux/types';\n\nimport {logoutUser,getUserData} from \"./redux/actions/userActions\";\nimport AuthRoute from \"./components/AuthRoute\";\nimport AuthRouteUser from \"./components/AuthRouteUser\";\nconst Dashboard = lazy(() => import( \"./pages/Dashboard/Dashboard\"));\nconst Profile = lazy(() => import( \"./pages/Profile/Profile\"));\nconst Transactions = lazy(() => import(\"./pages/Transactions/Transactions\"))\nconst SecurityCenter = lazy(() => import('./pages/Security/Security'))\nconst MySavings = lazy( () => import('./pages/Savings/Savings'))\nconst Wallets = lazy( () => import('./pages/Wallets/Wallets'))\nconst AuthPage = lazy(() => import('./pages/Auth/Auth'))\nconst Home = lazy(() => import('./pages/Home/Home'))\nconst Save = lazy(() => import('./pages/Save/Save'))\nconst BuySell = lazy(() => import('./pages/BuySell/BuySell'))\nconst NotFound = lazy(() => import('./pages/NotFound/NotFound'))\n\n\naxios.defaults.baseURL = \"https://truzact.com/api/v0/php\";\n\n\nconst token = localStorage.TRZACTIdToken;\nif (token) {\n // const decodedToken = jwtDecode(token);\n  //token expires in 1 month  + (30 * 86400 * 1000)\n\n  //store.dispatch({type: SET_AUTHENTICATED});\n  //axios.defaults.headers.common['Authorization'] = token;\n // store.dispatch(getUserData(token));\n  //store.dispatch(logoutUser());\n}else{\n//  store.dispatch(logoutUser());\n //window.location.href = '/';\n}\n\nfunction App() {\n\n  return (\n      <div>\n\n        <BrowserRouter>\n\n\n          <ErrorBoundary>\n            <AnimatePresence exitBeforeEnter>\n            <Switch>\n              <Suspense fallback={\n                <div className='loader'>\n\n\n                  <Loader\n                      type=\"Puff\"\n                      color=\"#0A0777\"\n                      height={100}\n                      width={100}\n                      timeout={3000} //3 secs\n\n                  />\n                </div>}>\n                {/*\n                            mobile header\n                            */}\n\n\n                <div className='contentWrap'>\n\n                  <Route path='/' exact component={Home}/>\n                  <Route path='/home' exact component={Home}/>\n                  <AuthRoute path=\"/auth\" exact component={AuthPage}/>\n\n                  <AuthRouteUser path=\"/dashboard\" exact component={Dashboard}/>\n                  <AuthRouteUser path=\"/setting\" exact component={Profile}/>\n                  <AuthRouteUser path=\"/transactions\" exact component={Transactions}/>\n                  <AuthRouteUser path=\"/security\" exact component={SecurityCenter}/>\n                  <AuthRouteUser path=\"/savings\" exact component={MySavings}/>\n                  <AuthRouteUser path=\"/save\" component={Save}/>\n                  <AuthRouteUser path=\"/wallets\" exact component={Wallets}/>\n                  <AuthRouteUser path=\"/buysell\" exact component={BuySell}/>\n\n\n                </div>\n\n\n              {/*  <Route component={NotFound}/>*/}\n              </Suspense>\n\n            </Switch>\n              </AnimatePresence>\n          </ErrorBoundary>\n        </BrowserRouter>\n\n\n      </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  user: state.user,\n\n});\nApp.propTypes = {\n  user: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  getUserData: PropTypes.func.isRequired,\n};\n\nconst mapActionsToProps = {\n  logoutUser,\n  getUserData\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(App);\n\n","C:\\reactApp\\truzactv1\\src\\serviceWorkerRegistration.js",[],"C:\\reactApp\\truzactv1\\src\\redux\\store.js",[],"C:\\reactApp\\truzactv1\\src\\redux\\types.js",[],"C:\\reactApp\\truzactv1\\src\\ErrorBoundary\\Error-boundary.component.js",[],"C:\\reactApp\\truzactv1\\src\\redux\\actions\\userActions.js",["198"],"import axios from 'axios'\r\nimport redaxios from 'redaxios'\r\nimport {\r\n    CLEAR_ERRORS,\r\n    SET_ERRORS,\r\n    SET_USER,\r\n    LOADING_USER,\r\n    SET_UNAUTHENTICATED,\r\n    SET_KYC,\r\n    LOADING_DATA,\r\n    UPDATE_PASS, SET_SUCCESS\r\n} from \"../types\";\r\n\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Headers':'Content-Type,Authorization',\r\n'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS',\r\n'Access-Control-Allow-Credentials':'true'\r\n    }\r\n};\r\nexport const signUpUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    axios.post('/signupuser.php', newUserData, {config})\r\n        .then((res) => {\r\n            // dispatch(getUserData());\r\n            //dispatch({type: CLEAR_ERRORS});\r\n\r\n            console.log(res.data)\r\n            if (res.data.status === '200') {\r\n                setAuthorizationHeader(res.data.member.Token);\r\n                dispatch({\r\n                    type: SET_USER,\r\n                    payload: res.data\r\n                });\r\n                dispatch({type: CLEAR_ERRORS})\r\n                history.push('/dashboard')\r\n                //window.location.href = '/dashboard'\r\n            } else {\r\n                dispatch({\r\n                    type: SET_ERRORS,\r\n                    payload: res.data\r\n                });\r\n            }\r\n\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n            console.log(err)\r\n        });\r\n};\r\n\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n\r\n    axios\r\n        .post('/loginuser.php', userData, {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers':'Content-Type,Authorization',\r\n            'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS',\r\n            'Access-Control-Allow-Credentials':'true'\r\n        })\r\n        .then((res) => {\r\n\r\n            if (res.data.status === '200') {\r\n                setAuthorizationHeader(res.data.member.Token);\r\n                dispatch({\r\n                    type: SET_USER,\r\n                    payload: res.data\r\n                });\r\n                dispatch({type: CLEAR_ERRORS})\r\n                history.push('/dashboard')\r\n            } else {\r\n                dispatch({\r\n                    type: SET_ERRORS,\r\n                    payload: res.data\r\n                });\r\n            }\r\n\r\n\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};\r\n\r\n\r\nexport const setKyc = (kycData) => async (dispatch) => {\r\n    dispatch({type: LOADING_DATA})\r\n    await redaxios.post('/kyc.php', kycData)\r\n        .then((res) => {\r\n            if (res.data.status === '200') {\r\n                dispatch({\r\n                    type: SET_KYC,\r\n                    payload: res.data\r\n                });\r\n                dispatch({type: CLEAR_ERRORS})\r\n            }else{\r\n\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err.response)\r\n    })\r\n}\r\n\r\n\r\nexport const updatePassword = (data) => async (dispatch) =>{\r\n    dispatch({type: LOADING_USER})\r\n   await redaxios.post('/updatepass.php', data).then((res) =>{\r\n\r\n       if (res.data.status === '200') {\r\n           dispatch({\r\n               type: UPDATE_PASS,\r\n               payload: res.data\r\n           });\r\n           dispatch({type:CLEAR_ERRORS})\r\n       }else{\r\n           dispatch({\r\n               type: SET_ERRORS,\r\n               payload: res.data\r\n           });\r\n       }\r\n\r\n\r\n        }).catch(err =>{\r\n        console.log(err.response)\r\n    })\r\n}\r\n\r\n\r\nexport const getUserData = (token) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    redaxios.post('/user.php', token, config)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('TRZACTIdToken');\r\n    localStorage.removeItem('persist:truzactMember');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({type: SET_UNAUTHENTICATED});\r\n    window.location.href = '/'\r\n    // history.push('/')\r\n};\r\n\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const TRZACTIdToken = `${token}`;\r\n    localStorage.setItem('TRZACTIdToken', TRZACTIdToken);\r\n    axios.defaults.headers.common['Authorization'] = TRZACTIdToken;\r\n};","C:\\reactApp\\truzactv1\\src\\redux\\reducers\\root-reducer.js",[],"C:\\reactApp\\truzactv1\\src\\pages\\Savings\\Savings.js",["199","200"],"import React from 'react';\r\nimport './Savings.scss'\r\nimport Notification from \"../../components/Notification\";\r\nimport brandLogo from \"../../assets/img/Truzact logo white horinzontal.png\";\r\nimport MobTop from \"../../components/MobTop\";\r\nimport Footer from \"../../components/Footer\";\r\nimport '../../Style/Responsive/Responsive.mySavings.scss'\r\nimport SavingBox from \"../../assets/ai/SavingBox.svg\";\r\nimport {GiPiggyBank, GiTakeMyMoney} from \"react-icons/gi\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faLock} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Menu from \"../../components/Menu\";\r\nimport MobileNav from \"../../components/MobNav\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {motion} from \"framer-motion\"\r\nimport {toggleHomeMenu} from \"../../redux/actions/dataActions\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        x: \"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        y: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        y: \"-10vh\",\r\n    }\r\n}\r\n\r\nconst Savings = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Menu/>\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={pageTransition} className='mySavings'>\r\n                <Notification/>\r\n                <div className='mySavingsWrap'>\r\n\r\n                    <div className='savingBox'>\r\n                        <section className='savingBoxTop'>\r\n                            <div className='savingIllustration'>\r\n                                <img src={SavingBox} alt='SavingBox'/>\r\n                            </div>\r\n                            <div className='savingText'>\r\n                                Here you reap what you saved!\r\n                            </div>\r\n                            <div className='dollarSign'>\r\n                                ₦\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className='savingBoxBottom'>\r\n                            <div className='amount'>\r\n                                ₦0.00\r\n                            </div>\r\n                            <div className='pill'>\r\n                                Saved\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                    <div className='savingBtnWrap'>\r\n                        <button className='withdrawBtn'>\r\n                            <GiTakeMyMoney/>\r\n                            <div>Withdraw</div>\r\n                        </button>\r\n\r\n                        <NavLink to='/save'>\r\n\r\n\r\n                        <button className='lockBtn'>\r\n                            <GiPiggyBank/>\r\n                            <div>Save</div>\r\n\r\n                        </button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n\r\n            </motion.div>\r\n\r\n            <div className='mobDash'>\r\n                <div className='mobileHeader'>\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n                </div>\r\n                <MobTop/>\r\n\r\n                <motion.div exit=\"out\" initial=\"out\" animate=\"in\"  variants={mobPageTransition} className='mobContent'>\r\n                <div className='mobSavingBox'>\r\n                    <div className='amount'>\r\n                        ₦0.00\r\n                    </div>\r\n                    <div className='pill'>\r\n                        <small>Saved</small>\r\n                    </div>\r\n                    <div className='savingIllustration'>\r\n                        <img src={SavingBox} alt='SavingBox'/>\r\n                    </div>\r\n                    <div className='savingText'>\r\n                        Here you reap what you saved!\r\n                    </div>\r\n                </div>\r\n                <div className='savingButtons'>\r\n                    <button className='withdrawBtn'>\r\n                        <i><GiTakeMyMoney/> </i>\r\n                        <div>Withdraw</div>\r\n                    </button>\r\n                    <NavLink to='/save'>\r\n                    <button className='lockBtn'>\r\n                        <i><GiPiggyBank/> </i>\r\n                        <div>Save</div>\r\n\r\n                    </button>\r\n                    </NavLink>\r\n                </div>\r\n                </motion.div>\r\n            </div>\r\n            <MobileNav/>\r\n        </div>\r\n    );\r\n};\r\n\r\nSavings.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.data\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    toggleHomeMenu,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps) (Savings);\r\n","C:\\reactApp\\truzactv1\\src\\pages\\Wallets\\Wallets.js",[],"C:\\reactApp\\truzactv1\\src\\pages\\Transactions\\Transactions.js",["201"],"import * as React from 'react';\r\nimport Notification from \"../../components/Notification\";\r\nimport './Transactions.scss'\r\nimport Footer from \"../../components/Footer\";\r\nimport TextInput from \"../../components/TextInput\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faExchangeAlt, faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Tabs from \"../../components/Tab\";\r\nimport TabPane from \"../../components/Tab-Pane\";\r\nimport '../../Style/Responsive/Responsive.Transactions.scss'\r\nimport TransactionFeed from \"../../components/TransactionFeed\";\r\nimport Button from \"../../components/Button\";\r\nimport depositAi from \"../../assets/ai/7.svg\";\r\nimport {useEffect} from \"react\";\r\nimport {gsap, Power3} from \"gsap\";\r\nimport brandLogo from \"../../assets/img/Truzact logo white horinzontal.png\";\r\nimport MobTop from \"../../components/MobTop\";\r\nimport Menu from \"../../components/Menu\";\r\nimport MobileNav from \"../../components/MobNav\";\r\nimport { motion } from \"framer-motion\"\r\n\r\n//redux\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {Spinner} from \"@chakra-ui/react\";\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in:{\r\n        opacity:1,\r\n        x:0,\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        x:\"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in:{\r\n        opacity:1,\r\n        y:0\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        y:\"-10vh\",\r\n    }\r\n}\r\n\r\nconst Transactions = (props) => {\r\n\r\n    //user info\r\n    const {userData:{member:{Bitcoin,Ethereum,Dash,BNB, Ripple, Tron, Aave, BitcoinCash}}, loading} = props.user\r\n    const money = Ethereum + Bitcoin + BNB + Dash + Tron + Ripple + Aave + BitcoinCash;\r\n\r\n    useEffect(() => {\r\n        gsap.from('.depositBoard', {\r\n            ease: Power3.easeOut,\r\n            y: -25,\r\n            opacity: 0,\r\n            duration: 1\r\n        })\r\n    }, []);\r\n    return (\r\n        <div className=\"App\">\r\n            <Menu/>\r\n\r\n\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={pageTransition} className='transactions'>\r\n                <Notification/>\r\n\r\n                <div className='transactionsWrap'>\r\n\r\n\r\n                    <section className='transactionsContainer'>\r\n                        <form>\r\n\r\n                            <TextInput placeHolder='Search..' type='search' customizeClass={'searchInput'}\r\n                                       label={<FontAwesomeIcon icon={faSearch}/>}/>\r\n                        </form>\r\n\r\n                        <div className='tab-wrap'>\r\n                            <Tabs>\r\n                                <TabPane name=\"Buy/Sell\" key=\"1\">\r\n                                    <div className='feedWrap'>\r\n                                        <TransactionFeed type='buySell' address='3Q9LBTehKhMsFneFDJBJFhhHbJkUv97y5B'\r\n                                                         tag='Buy/Sell' amount={'7,633.84'}\r\n                                                         date={'24, Nov 2020'}\r\n                                                         label={<FontAwesomeIcon icon={faExchangeAlt}/>}/>\r\n                                    </div>\r\n\r\n\r\n                                </TabPane>\r\n                                <TabPane name='Deposit' key=\"2\">\r\n                                    <div className='feedWrap'>\r\n                                        <TransactionFeed type='deposit' tag='Deposit'/>\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane name=\"Withdrawal\" key=\"3\">\r\n                                    <div className='feedWrap'>\r\n                                        <TransactionFeed type='withdrawal' tag='Withdrawal'/>\r\n                                    </div>\r\n                                </TabPane>\r\n                            </Tabs>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className='depositBoard'>\r\n                        <div className=''>\r\n                            Account Balance\r\n                        </div>\r\n                        <div className='balance'>\r\n                            ₦ { money !== '' ?\r\n                            money : <Spinner />\r\n                        }\r\n                        </div>\r\n                        <div className='depositBtnWrap'>\r\n                            <Button/>\r\n                        </div>\r\n                        <div className='illustration'>\r\n                            <img src={depositAi} alt=''/>\r\n                        </div>\r\n\r\n                    </section>\r\n\r\n                </div>\r\n\r\n                <Footer/>\r\n            </motion.div>\r\n            <div className='mobDash'>\r\n                <div className='mobileHeader'>\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n                </div>\r\n                <MobTop/>\r\n                <Notification/>\r\n\r\n                <motion.div exit=\"out\" initial=\"out\" animate=\"in\"  variants={mobPageTransition} className='mobContent'>\r\n\r\n                    <div className='mobTransactionCont'>\r\n                        <form>\r\n\r\n                            <TextInput placeHolder='Search..' type='search' customizeClass={'searchInput'}\r\n                                       label={<FontAwesomeIcon icon={faSearch}/>}/>\r\n                        </form>\r\n\r\n\r\n                        <div className='tab-wrap'>\r\n                            <Tabs>\r\n                                <TabPane name=\"Buy/Sell\" key=\"1\">\r\n                                    <div className='feedWrap'>\r\n                                        <TransactionFeed type='buySell' address='3Q9LBTehKhMsFneFDJBJFhhHbJkUv97y5B'\r\n                                                         tag='Buy/Sell' amount={'7,633.84'}\r\n                                                         date={'24, Nov 2020'}\r\n                                                         label={<FontAwesomeIcon icon={faExchangeAlt}/>}/>\r\n                                    </div>\r\n\r\n\r\n                                </TabPane>\r\n                                <TabPane name='Deposit' key=\"2\">\r\n                                    <div className='feedWrap'>\r\n                                        <TransactionFeed type='deposit' tag='Deposit'/>\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane name=\"Withdrawal\" key=\"3\">\r\n                                    <div className='feedWrap'>\r\n                                        <TransactionFeed type='withdrawal' tag='Withdrawal'/>\r\n                                    </div>\r\n                                </TabPane>\r\n                            </Tabs>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </motion.div>\r\n\r\n            </div>\r\n            <MobileNav/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nTransactions.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps) (Transactions)","C:\\reactApp\\truzactv1\\src\\pages\\Security\\Security.js",["202","203","204","205","206"],"import React, {useState,useEffect} from 'react';\r\nimport Notification from \"../../components/Notification\";\r\nimport './Security.scss';\r\nimport '../../Style/Responsive/Responsive.security.scss'\r\nimport Footer from \"../../components/Footer\";\r\nimport {BsShieldLockFill, BsLockFill} from 'react-icons/bs';\r\nimport {TiCalendar} from 'react-icons/ti';\r\nimport {IoKey} from 'react-icons/io5';\r\nimport {RiArrowRightSLine, RiShieldKeyholeFill} from 'react-icons/ri';\r\nimport TextInput from \"../../components/TextInput\";\r\nimport brandLogo from \"../../assets/img/Truzact logo white horinzontal.png\";\r\nimport MobTop from \"../../components/MobTop\";\r\nimport MobileNav from \"../../components/MobNav\";\r\nimport Menu from \"../../components/Menu\";\r\nimport {motion} from \"framer-motion\"\r\nimport {Badge, RadioGroup, Stack, Radio,Spinner, useToast} from \"@chakra-ui/react\"\r\nimport {IoDocumentLock, IoSend} from 'react-icons/io5'\r\nimport {MdDateRange} from 'react-icons/md'\r\nimport {FaIdCardAlt, FaChild} from 'react-icons/fa'\r\nimport {BsFillPeopleFill} from 'react-icons/bs'\r\nimport {GiWorld} from 'react-icons/gi'\r\n\r\n\r\n//redux\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {setKyc, updatePassword} from \"../../redux/actions/userActions\";\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        x: \"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        y: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        y: \"-10vh\",\r\n    }\r\n}\r\n\r\nconst Security = (props) => {\r\n\r\n    const toast = useToast()\r\n\r\n    //for password reset\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [cNewPassword, setCNewPassword] = useState('');\r\n\r\n\r\n    //\r\n    const [dob, setDob] = useState('')\r\n    const [BVN, setBVN] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [nextOfKin, setNextOfKin] = useState('')\r\n    const [streetAddress, setStreetAddress] = useState('')\r\n    const [verificationId, setVerificationId] = useState('')\r\n    const [relationShipStatus, setRelationShipStatus] = useState('')\r\n\r\n    const {userData: {member: {ID}}, kycData,loading, allData, errors} = props.user\r\n    const {setKyc,updatePassword} = props\r\n\r\n\r\n    const updateUserPassword = event => {\r\n        event.preventDefault();\r\n        const passFormData = new FormData();\r\n        passFormData.append('OldPassword', oldPassword);\r\n        passFormData.append( 'NewPassword', newPassword);\r\n        passFormData.append( 'UserID', ID);\r\n        updatePassword(passFormData)\r\n\r\n\r\n    }\r\n  /*  useEffect(() => {\r\n\r\n        if (loading === false && allData !== null) {\r\n            toast({\r\n                title: \"Notice\",\r\n                description:allData.message,\r\n                position: \"top\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n    }, [allData.message])*/\r\n\r\n/*    useEffect(() => {\r\n\r\n        if (errors !== null) {\r\n            toast({\r\n                title: \"Notice\",\r\n                description:errors.message,\r\n                position: \"top\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n    }, [errors])*/\r\n\r\n\r\n    const userSetKyc = event => {\r\nevent.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('DOB', dob);\r\n        formData.append('userId', ID);\r\n        formData.append('BVN', BVN);\r\n        formData.append('gender', gender);\r\n        formData.append('state', state);\r\n        formData.append('country', country);\r\n        formData.append('nextOfKin', nextOfKin);\r\n        formData.append('streetAddress', streetAddress);\r\n        formData.append('verificationId', verificationId);\r\n        formData.append('relationShipStatus', relationShipStatus);\r\n        setKyc(formData)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Menu/>\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={pageTransition} className='securityCenter'>\r\n                <Notification/>\r\n                <div className='securityContainer'>\r\n                    <div className='securityTop'>\r\n                        <section className='password'>\r\n                            <div className='head'>\r\n                                <i className='icon'>\r\n                                    <BsShieldLockFill/>\r\n                                </i>\r\n                                <div className='text'>Change account password</div>\r\n                            </div>\r\n                            <div className='smallNote'>\r\n                                Want to use a different password or lock someone else out of your account?\r\n                            </div>\r\n                            <form method='post' action='' className='formWrap' onSubmit={updateUserPassword}>\r\n\r\n                                <TextInput value={oldPassword} label={<IoKey/>} name='oldPassword' handleChange={e => setOldPassword(e.target.value)} type='password' placeHolder='Old password'\r\n                                           topLabel='Your Old Password'/>\r\n                                <TextInput value={newPassword} label={<IoKey/>} name='newPassword' handleChange={e => setNewPassword(e.target.value)} type='password' placeHolder='New password'\r\n                                           topLabel='Your New Password'/>\r\n                                <TextInput value={cNewPassword} name='cNewPassword' handleChange={e => setCNewPassword(e.target.value)} label={<IoKey/>} type='password' placeHolder='New Password'\r\n                                           topLabel='Confirm New Password'/>\r\n                                <button className='updateBtn' type='submit'>\r\n                                    {\r\n                                        loading ? (<Spinner />) :'Update'\r\n                                    }\r\n                                </button>\r\n                            </form>\r\n\r\n\r\n                        </section>\r\n                        <section className='twoFA'>\r\n                            <div className='head'>\r\n                                <i className='icon'>\r\n                                    <BsLockFill/>\r\n                                </i>\r\n                                <div className='text'>2 factor authentication</div>\r\n                            </div>\r\n                            <div className='smallNote'>\r\n                                2FA is automatically activated on your account for security reasons\r\n                            </div>\r\n                            <button className='twoFABtn'>\r\n                                <div>\r\n                                    How can i activate this\r\n                                </div>\r\n                                <RiArrowRightSLine/>\r\n\r\n                            </button>\r\n                        </section>\r\n                        <section className='apiKey'>\r\n                            <div className='apiKeyBox'>\r\n                                <div className='apiKeyIcon'>\r\n                                    <RiShieldKeyholeFill/>\r\n                                </div>\r\n\r\n                                <section className='apiKeyTitle'>\r\n                                    API Keys <Badge variant=\"outline\" colorScheme=\"green\">\r\n                                    Coming soon!\r\n                                </Badge>\r\n                                </section>\r\n\r\n                                <section>\r\n                                    API keys help you use truzact's infrastructure from within your own application.\r\n                                </section>\r\n                                <button className='soonBtn'>\r\n                                    <TiCalendar/> COMING SOON\r\n                                </button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                    <div className='securityBottom'>\r\n                        <div className='connectedDevice'>\r\n                            <div className='head'>\r\n                                KYC  &nbsp; <Badge colorScheme=\"red\">Pending</Badge>\r\n                            </div>\r\n                            <div className='smallNote'>\r\n                                This is a way for Truzact to validate and confirm your identity\r\n                                <div>\r\n                                    <small>Please provide your correct info below</small>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <form method='post' className='kycForm' onSubmit={userSetKyc}>\r\n                                <TextInput topLabel='BVN' handleChange={e => setBVN(e.target.value)} value={BVN} type='number' label={<IoDocumentLock/>} placeHolder='BVN'\r\n                                           required/>\r\n                                <TextInput handleChange={e => setDob(e.target.value)} topLabel='Date of birth' name='DateOfBirth' value={dob} type='date' label={<MdDateRange/>}\r\n                                           placeHolder='Date of birth' required/>\r\n<input type='te'/>\r\n                                <div className='radioWrap'>\r\n                                    <div className='radioTopLabel'>\r\n                                        Gender\r\n                                    </div>\r\n                                        <RadioGroup defaultValue=\"2\"  value={gender} onChange={event => setGender(event.target.value)}>\r\n                                        <Stack spacing={5} direction=\"row\">\r\n                                            <Radio colorScheme=\"blue\" value='Male' isChecked={true}>\r\n                                                Male\r\n                                            </Radio>\r\n                                            <Radio colorScheme=\"blue\" value='Female'>\r\n                                                Female\r\n                                            </Radio>\r\n                                        </Stack>\r\n                                </RadioGroup>\r\n                                    </div>\r\n\r\n                                <TextInput handleChange={e => setCountry(e.target.value)} topLabel='Country' type='text' value={country} name='country' label={<GiWorld/>}\r\n                                           placeHolder='Country of origin' required/>\r\n                                <TextInput handleChange={e => setVerificationId(e.target.value)} topLabel='Verification id' name='verificationId' value={verificationId} type='text' label={<FaIdCardAlt/>}\r\n                                           placeHolder=\"e.g Driver's license\" required/>\r\n                                <TextInput handleChange={e => setState(e.target.value)} topLabel='State of origin/residence' value={state} name='state' type='text' label={<IoDocumentLock/>}\r\n                                           placeHolder=\"State\" required/>\r\n                                <TextInput handleChange={e => setStreetAddress(e.target.value)} topLabel='Street address' value={streetAddress} name='streetAddress' type='text' label={<GiWorld/>}\r\n                                           placeHolder=\"Street address\" required/>\r\n                                <TextInput handleChange={e => setRelationShipStatus(e.target.value)} topLabel='Relationship status' value={relationShipStatus} name='relationShipStatus' type='text' label={<BsFillPeopleFill/>}\r\n                                           placeHolder=\"relationship status\" required/>\r\n                                <TextInput handleChange={e => setNextOfKin(e.target.value)} topLabel='Next of kin' type='text' value={nextOfKin} name='nextOfKin' label={<FaChild/>}\r\n                                           placeHolder=\"Next of kin\" required/>\r\n                                <button className='kycBtn' type='submit'>\r\n                                    Update <IoSend/>\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer/>\r\n            </motion.div>\r\n\r\n            <div className='mobDash'>\r\n                <div className='mobileHeader'>\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n                </div>\r\n\r\n                <MobTop/>\r\n                <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={mobPageTransition} className='mobContent'>\r\n\r\n                    <div className='passwordUpdateContainer'>\r\n                        <div className='topHeader'>\r\n                            <div className='headIcon'>\r\n                                <BsShieldLockFill/>\r\n                            </div>\r\n                            <div className='headerTextWrap'>\r\n                                <div className='title'>\r\n                                    Change account password\r\n                                </div>\r\n                                <div className='subNote'>\r\n                                    Want to use a different password or lock someone else out of your account?\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <form method='post' onSubmit={updateUserPassword} encType='multipart/form-data'>\r\n                            <TextInput label={<IoKey/>} value={oldPassword} handleChange={e => setOldPassword(e.target.value)} name='oldPass' type='password' placeHolder='Old password'\r\n                                       topLabel='Your Old Password'/>\r\n                            <TextInput label={<IoKey/>} type='password' value={newPassword} handleChange={e => setNewPassword(e.target.value)} name='newPass' placeHolder='New password'\r\n                                       topLabel='Your New Password'/>\r\n                            <TextInput label={<IoKey/>} type='password' mame='newPass' value={cNewPassword} handleChange={e => setCNewPassword(e.target.value)} placeHolder='New Password'\r\n                                       topLabel='Confirm New Password'/>\r\n                            <button className='updateBtn' type='submit'>\r\n                                {\r\n                                    loading ? (<Spinner />) :'Update'\r\n                                }\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n                    <div className='securityBottom'>\r\n                        <div className='connectedDevice'>\r\n                            <div className='head'>\r\n                                KYC  &nbsp; <Badge colorScheme=\"red\">Pending</Badge>\r\n                            </div>\r\n                            <div className='smallNote'>\r\n                                This is a way for Truzact to validate and confirm your identity\r\n                                <div>\r\n                                    <small>Please provide your BVN below</small>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <form method='post' className='kycForm' onSubmit={userSetKyc} encType='multipart/form-data'>\r\n                                <TextInput topLabel='BVN' handleChange={e => setBVN(e.target.value)} name='BVN' value={BVN} type='number' label={<IoDocumentLock/>} placeHolder='BVN'\r\n                                           required/>\r\n                                <TextInput handleChange={e => setDob(e.target.value)} topLabel='Date of birth' name='DOB' value={dob} type='date' label={<MdDateRange/>}\r\n                                           placeHolder='Date of birth' required/>\r\n                                <div className='radioWrap'>\r\n                                    <div className='radioTopLabel'>\r\n                                        Gender\r\n                                    </div>\r\n                                    <RadioGroup defaultValue=\"2\">\r\n                                        <Stack spacing={5} direction=\"row\">\r\n                                            <Radio colorScheme=\"blue\" value='Male' isChecked={true} onChange={e => setGender(e.target.value)}>\r\n                                                Male\r\n                                            </Radio>\r\n                                            <Radio colorScheme=\"blue\" value='Female' onChange={e => setGender(e.target.value)}>\r\n                                                Female\r\n                                            </Radio>\r\n                                        </Stack>\r\n                                    </RadioGroup>\r\n                                </div>\r\n                                <TextInput handleChange={e => setCountry(e.target.value)} topLabel='Country' type='text' value={country} name='countryOfResidence' label={<GiWorld/>}\r\n                                           placeHolder='Country of origin' required/>\r\n                                <TextInput handleChange={e => setVerificationId(e.target.value)} topLabel='Verification id' name='verification' value={verificationId} type='text' label={<FaIdCardAlt/>}\r\n                                           placeHolder=\"e.g Driver's license\" required/>\r\n                                <TextInput handleChange={e => setState(e.target.value)} topLabel='State of origin/residence' value={state} name='stateOfOrigin' type='text' label={<IoDocumentLock/>}\r\n                                           placeHolder=\"State\" required/>\r\n                                <TextInput handleChange={e => setStreetAddress(e.target.value)} topLabel='Street address' value={streetAddress} name='street' type='text' label={<GiWorld/>}\r\n                                           placeHolder=\"Street address\" required/>\r\n                                <TextInput handleChange={e => setRelationShipStatus(e.target.value)} topLabel='Relationship status' value={relationShipStatus} name='maritalStatus' type='text' label={<BsFillPeopleFill/>}\r\n                                           placeHolder=\"relationship status\" required/>\r\n                                <TextInput handleChange={e => setNextOfKin(e.target.value)} topLabel='Next of kin' type='text' value={nextOfKin} name='nextKin' label={<FaChild/>}\r\n                                           placeHolder=\"Next of kin\" required/>\r\n\r\n                                <button className='kycBtn' type='submit'>\r\n                                    {\r\n                                        loading ? <Spinner/> : <>Update <IoSend/></>\r\n                                    }\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='twoFAContainer'>\r\n                        <div className='topHeader'>\r\n                            <div className='headIcon'>\r\n                                <BsShieldLockFill/>\r\n                            </div>\r\n                            <div className='headerTextWrap'>\r\n                                <div className='title'>\r\n                                    2 factor authentication\r\n                                </div>\r\n                                <div className='subNote'>\r\n                                    2FA is automatically activated on your account for security reasons\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='twoFABtnWrap'>\r\n                            <button className='twoFABtn'>\r\n                                <div>\r\n                                    How can i deactivate this\r\n                                </div>\r\n                                <RiArrowRightSLine/>\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='apiKeyContainer'>\r\n                        <div className='apiKeyIcon'>\r\n                            <RiShieldKeyholeFill/>\r\n                        </div>\r\n\r\n                        <section className='apiKeyTitle'>\r\n                            API Keys <Badge variant=\"outline\" colorScheme=\"blue\">\r\n                            Coming soon!\r\n                        </Badge>\r\n                        </section>\r\n\r\n                        <section>\r\n                            API keys help you use truzact's infrastructure from within your own application.\r\n                        </section>\r\n                        <button className='soonBtn'>\r\n                            <TiCalendar/> COMING SOON\r\n                        </button>\r\n                    </div>\r\n                </motion.div>\r\n            </div>\r\n            <MobileNav/>\r\n        </div>\r\n    );\r\n};\r\n\r\nSecurity.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n    setKyc: PropTypes.func.isRequired,\r\n    updatePassword: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.user\r\n})\r\nconst mapActionsToProps = {\r\n    setKyc,\r\n    updatePassword\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Security);\r\n","C:\\reactApp\\truzactv1\\src\\pages\\Auth\\Auth.js",["207","208","209","210","211","212","213"],"import React, {useState, useEffect, useMemo} from 'react';\r\nimport './Auth.scss';\r\nimport '../../Style/Responsive/Responisve.Auth.scss'\r\nimport {gsap, Power3, TimelineLite} from \"gsap\";\r\nimport authImage from '../../assets/ai/auth.svg'\r\nimport TextInput from \"../../components/TextInput\";\r\nimport {RiUserLine, RiUserSharedLine} from \"react-icons/ri\";\r\nimport {HiMail} from \"react-icons/hi\";\r\nimport {BiKey, BiPhoneCall} from \"react-icons/bi\";\r\nimport {toggleAuth} from \"../../redux/actions/dataActions\";\r\nimport {loginUser, signUpUser} from \"../../redux/actions/userActions\";\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\n\r\n\r\n//Toast\r\nimport {useToast} from \"@chakra-ui/react\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AuthPage = (props) => {\r\n    const toast = useToast()\r\n\r\n\r\n    const {toggleAuth, signUpUser, loginUser} = props\r\n    const {loading, errors} = props.user\r\n    const {isLoginUi} = props.data\r\n\r\n    let t1 = new TimelineLite();\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [referral, setReferral] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n\r\n\r\n    useMemo(() => {\r\n        let t1 = new TimelineLite();\r\n        t1.from('.headTitle', {\r\n            opacity: 0,\r\n            y: -10,\r\n            ease: Power3.easeInOut,\r\n        }).from('.bannerSubText', {\r\n            opacity: 0,\r\n            y: -10,\r\n            ease: Power3.easeInOut,\r\n        }).from('.authIllustration', {\r\n            opacity: 0,\r\n            y: -10,\r\n            ease: Power3.easeInOut,\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (loading === false && errors !== null) {\r\n\r\n\r\n            toast({\r\n                title: \"Error\",\r\n                description: errors.message,\r\n                position: \"top\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n\r\n    }, [errors])\r\n\r\n    const handleValidation = (e) => {\r\n        if (/[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>\\/?~]/.test(firstName)) {\r\n            setFirstName(e.target.value.split(/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/).join('').trim(''));\r\n\r\n        }\r\n        if (/[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>\\/?~]/.test(lastName)) {\r\n            setLastName(e.target.value.split(/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/).join('').trim(''));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const toggleNewUser = () => {\r\n        gsap.to('.signUpBtn', {\r\n            width: 190,\r\n            ease: Power3.easeOut,\r\n            color: '#fff',\r\n            border: '1px solid #00068A',\r\n            backgroundColor: '#00068A',\r\n\r\n        })\r\n        gsap.to('.loginBtn', {\r\n            width: 100,\r\n            ease: Power3.easeOut,\r\n            color: '#131313',\r\n            backgroundColor: '#fff',\r\n            border: '1px solid #5E5D5D'\r\n        })\r\n\r\n\r\n        t1.to('.login', {\r\n            display: 'none',\r\n            ease: Power3.easeOut,\r\n            y: -80,\r\n            opacity: 0,\r\n            delay: 0,\r\n\r\n        })\r\n        t1.to('.SignUp', {\r\n            display: 'flex',\r\n            ease: Power3.easeOut,\r\n            y: 10,\r\n            delay: 0,\r\n            scale: 1,\r\n            opacity: 1\r\n        });\r\n\r\n\r\n        toggleAuth(true)\r\n        if (isLoginUi) {\r\n\r\n\r\n            //here we validate\r\n            if (firstName.length < 2 || lastName.length < 2) {\r\n\r\n                toast({\r\n                    title: \"Your name is too short\",\r\n                    description: \"Your name should be longer than 2 letters\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (phone.length < 1) {\r\n                toast({\r\n                    title: \"Phone number too short\",\r\n                    description: \"Please enter a valid phone number\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n            if (/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g.test(email) === false || email.length < 2) {\r\n\r\n                toast({\r\n                    title: \"Invalid email\",\r\n                    description: \"Please enter a valid email address\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (password.length < 5) {\r\n                toast({\r\n                    title: \"Password\",\r\n                    description: \"password is too short\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n\r\n\r\n            if (password !== confirmPassword) {\r\n                toast({\r\n                    title: \"Confirm Password\",\r\n                    description: \"password don't match\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n\r\n\r\n            const formData = new FormData();\r\n            formData.append('FirstName', firstName);\r\n            formData.append('LastName', lastName);\r\n            formData.append('Phone', phone);\r\n            formData.append('EmailAddress', email);\r\n            formData.append('Referrer ', referral);\r\n            formData.append('Password', password);\r\n            signUpUser(formData, props.history)\r\n\r\n\r\n        }\r\n\r\n\r\n        //console.log(props.data.isLoginUi)\r\n    }\r\n\r\n    const toggleLogin = () => {\r\n\r\n        gsap.to('.loginBtn', {\r\n            width: 190,\r\n            backgroundColor: '#00068A',\r\n            color: '#fff',\r\n            border: '1px solid #00068A',\r\n            ease: Power3.easeOut\r\n        })\r\n        gsap.to('.signUpBtn', {\r\n            width: 100,\r\n            ease: Power3.easeOut,\r\n            color: '#131313',\r\n            backgroundColor: '#fff',\r\n            border: '1px solid #5E5D5D'\r\n\r\n        })\r\n\r\n\r\n        t1.to('.SignUp', {\r\n            display: 'none',\r\n            ease: Power3.easeOut,\r\n            y: -10,\r\n            opacity: 0,\r\n            delay: 0,\r\n        }).to('.login', {\r\n            display: 'flex',\r\n            ease: Power3.easeOut,\r\n            y: 50,\r\n            delay: 0,\r\n            opacity: 1,\r\n            scale: 1,\r\n        });\r\n\r\n        toggleAuth(false)\r\n        if (!isLoginUi) {\r\n\r\n            if (/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g.test(email) === false || email.length < 2) {\r\n\r\n                toast({\r\n                    title: \"Invalid email\",\r\n                    description: \"Please enter a valid email address\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n            if (password.length < 5) {\r\n                toast({\r\n                    title: \"Password\",\r\n                    description: \"password is too short\",\r\n                    status: \"warning\",\r\n                    duration: 6000,\r\n                    position: \"top\",\r\n                    isClosable: true,\r\n                })\r\n                return;\r\n            }\r\n            const formData = new FormData();\r\n\r\n            formData.append('EmailAddress', email);\r\n            formData.append('Password', password);\r\n            loginUser(formData, props.history)\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className='authPage'>\r\n            <div className='alertWrap'>\r\n\r\n            </div>\r\n\r\n            <div className='authComponent'>\r\n                <div className='authContainer'>\r\n\r\n                    <div className='SignUp'>\r\n\r\n                        <header className='mobHeader'>\r\n\r\n                            <div className='title'>\r\n                                Sign Up to Truzact\r\n                            </div>\r\n                            <div className='subText'>\r\n                                Fill the form below with to create a truzact\r\n                                profile.\r\n                            </div>\r\n                        </header>\r\n                        <header className='SignUpHeader'>\r\n                            <div className='title'>\r\n                                Sign Up to Truzact\r\n                            </div>\r\n                            <div className='subText'>\r\n                                Fill the form below with to create a truzact\r\n                                profile.\r\n                            </div>\r\n                        </header>\r\n                        <form className='SignUpWrap' method='post'>\r\n\r\n                            <div className='inputCont'>\r\n\r\n                                <TextInput handleChange={e => setFirstName(e.target.value)} value={firstName}\r\n                                           handleValidation={e => handleValidation(e)}\r\n                                           type='text'\r\n                                           label={<RiUserLine/>} topLabel='First Name' name='firstName'\r\n                                           placeHolder='E.g Kayode'/>\r\n\r\n                                <TextInput handleChange={e => setLastName(e.target.value)}\r\n                                           handleValidation={e => handleValidation(e)} value={lastName} type='text'\r\n                                           label={<RiUserLine/>} topLabel='Last Name' name='lastName'\r\n                                           placeHolder='E.g Kelechi'/>\r\n\r\n                            </div>\r\n\r\n\r\n                            <TextInput handleChange={e => setEmail(e.target.value)} type='email'\r\n                                       label={<HiMail/>} value={email} topLabel='Your Email' name='emailAddress'\r\n                                       placeHolder='e.g kayode@yahoo.com'/>\r\n\r\n                            <TextInput handleChange={e => setPhone(e.target.value)}\r\n                                       type='number'\r\n                                       label={<BiPhoneCall/>} value={phone} topLabel='Your Phone Number' name='phone'\r\n                                       placeHolder='e.g: 2348107244292'/>\r\n\r\n                            <TextInput handleChange={e => setReferral(e.target.value)}\r\n                                       type='text'\r\n                                       label={<RiUserSharedLine/>} value={referral} topLabel='Who told you about us?'\r\n                                       name='referral'\r\n                                       placeHolder='Referral'/>\r\n\r\n                            <div className='inputCont'>\r\n                                <TextInput handleChange={e => setPassword(e.target.value)} type='password'\r\n                                           label={<BiKey/>} value={password} topLabel='Your Password' name='pass'\r\n                                           placeHolder='Password'/>\r\n\r\n                                <TextInput handleChange={e => setConfirmPassword(e.target.value)} type='password'\r\n                                           label={<BiKey/>} value={confirmPassword} topLabel='Repeat Password'\r\n                                           name='confirmPassword'\r\n                                           placeHolder='Confirm Password'/>\r\n\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <div className='passStrength'>\r\n                                <PasswordStrengthBar password={password} minLength={4}/>\r\n                            </div>\r\n\r\n                            <div className='bottomMessage'>\r\n                                <span>\r\n                                    By signing up you agree with our terms and condition\r\n                                </span>\r\n\r\n                            </div>\r\n                            <div className='loaderContainer'>\r\n                                {\r\n                                    loading &&\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#0A0777\"\r\n                                        height={50}\r\n                                        width={50}\r\n                                        timeout={3000} //3 secs\r\n\r\n                                    />\r\n\r\n                                }\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='login'>\r\n\r\n                        <header className='mobHeader'>\r\n\r\n                            <div className='title'>\r\n                                Login to Your truzact account\r\n                            </div>\r\n                            <div className='subText'>\r\n                                Fill the form below with to create a truzact\r\n                                profile.\r\n                            </div>\r\n                        </header>\r\n                        <div className='loginHeader'>\r\n\r\n                            <div className='title'>\r\n                                Login Up to Truzact\r\n                            </div>\r\n                            <div className='subText'>\r\n                                Fill the form below with to access your truzact\r\n                                profile..\r\n                            </div>\r\n\r\n                        </div>\r\n                        <form className='loginWrap'>\r\n                            <TextInput type='email' handleChange={e => setEmail(e.target.value)} label={<HiMail/>}\r\n                                       topLabel='Your email' name='email'\r\n                                       placeHolder='Email'/>\r\n                            <TextInput type='password' value={password} handleChange={e => setPassword(e.target.value)}\r\n                                       label={<BiKey/>} topLabel='Your password' name='password'\r\n                                       placeHolder='Password'/>\r\n                            <div className='bottomMessage'>\r\n                                <span>\r\n                                   Forgot password?\r\n                                </span>\r\n\r\n                            </div>\r\n                            <div className='loaderContainer'>\r\n                                {\r\n                                    loading &&\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#0A0777\"\r\n                                        height={50}\r\n                                        width={50}\r\n                                        timeout={3000} //3 secs\r\n\r\n                                    />\r\n\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className='authButtonWrap'>\r\n                    <button className='signUpBtn' onClick={() => toggleNewUser()}>\r\n                        Sign Up\r\n                    </button>\r\n\r\n                    <button className='loginBtn' onClick={() => toggleLogin()}>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='bannerDescription'>\r\n                <div className='headTitle'>\r\n                    Create wealth with your crypto\r\n                    assets\r\n                </div>\r\n                <div className='bannerSubText'>\r\n                    Discover a safe world where it’s profitable to save & trade your cryptocurrency.\r\n                </div>\r\n\r\n                <div className='authIllustration'>\r\n                    <img src={authImage} alt='Auth illustration'/>\r\n                </div>\r\n                <Link to='/home'>\r\n                    <button className='aboutBtn'>\r\n                        About Truzact\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nAuthPage.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n    toggleAuth: PropTypes.func.isRequired,\r\n    signUpUser: PropTypes.func.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    toggleAuth,\r\n    signUpUser,\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(AuthPage);\r\n","C:\\reactApp\\truzactv1\\src\\pages\\Profile\\Profile.js",["214","215","216","217","218","219","220","221","222"],"import React, {useState, useEffect} from 'react';\r\nimport Notification from \"../../components/Notification\";\r\nimport './Profile.scss';\r\nimport '../../Style/Responsive/Responsive.Profile.scss';\r\nimport Footer from \"../../components/Footer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faArrowRight,\r\n    faArrowUp,\r\n    faAt,\r\n    faCamera, faChevronUp, faLongArrowAltUp,\r\n    faMoneyBill,\r\n    faPhone, faPiggyBank,\r\n    faPlus,\r\n    faUser\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport holdingPhone from '../../assets/holding-phone-colour.svg';\r\nimport holdingPhoneDark from '../../assets/holding-phone-monochrome.svg';\r\nimport TextInput from \"../../components/TextInput\";\r\nimport useDarkMode from \"use-dark-mode\";\r\nimport refAI from \"../../assets/ai/wfh_7.svg\";\r\nimport brandLogo from \"../../assets/img/Truzact logo white horinzontal.png\";\r\nimport userImage from '../../assets/img/me.jpg'\r\nimport {HiOutlineViewGridAdd} from 'react-icons/hi';\r\nimport userImg from '../../assets/img/me.jpg'\r\nimport Menu from \"../../components/Menu\";\r\nimport MobileNav from \"../../components/MobNav\";\r\nimport {Power3, TimelineLite} from \"gsap\";\r\nimport { motion } from \"framer-motion\"\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\r\n//redux\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {GrUpdate} from 'react-icons/gr'\r\nimport {ImPhone} from 'react-icons/im'\r\nimport {GiTakeMyMoney} from 'react-icons/gi'\r\n\r\n\r\n\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in:{\r\n        opacity:1,\r\n        x:0,\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        x:\"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in:{\r\n        opacity:1,\r\n        y:0\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        y:\"-10vh\",\r\n    }\r\n}\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    let t1 = new TimelineLite();\r\n    const {value} = useDarkMode(false);\r\n    const [open, setOpen] = useState(false);\r\n    useEffect(() => {\r\n        setOpen(true)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        t1.from('.verification', {\r\n            y: -20,\r\n            ease: Power3.easeOut,\r\n            duration: 0.5,\r\n        }, 'start');\r\n        t1.from('.referral', {y: -20, opacity: 0, ease: Power3.easeIn, duration:0.5}, 'start')\r\n        t1.from('.profileSettings', {y: -20, opacity: 0, ease: Power3.easeIn, duration:0.5}, 'start')\r\n        t1.from('.cardHeadsWrap', {y: -20, opacity: 0, ease: Power3.easeIn, duration:0.5}, 'start')\r\n\r\n    }, [])\r\n\r\n    //user info\r\n    const {userData:{member:{ID, FirstName, LastName,EmailAddress, Phone, ProfileImage, Bitcoin,Ethereum,Dash,BNB, Ripple, Tron, Aave, BitcoinCash,Token}}} = props.user\r\n    const money = Ethereum + Bitcoin + BNB + Dash + Tron + Ripple + Aave + BitcoinCash;\r\n    return (\r\n        <div className=\"App\">\r\n            <Menu/>\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" className=\"userProfile\" variants={pageTransition}>\r\n\r\n                <Notification/>\r\n\r\n                <div className='userProfileFDesktop'>\r\n                    <div className='cardHeadsWrap'>\r\n                        <section className='balance'>\r\n                            <button className='depositBtn'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faArrowUp}/>\r\n                                </section>\r\n                                <div className='text'>\r\n                                    DEPOSIT\r\n                                </div>\r\n                            </button>\r\n                            <div className='amount'>\r\n                                ₦{money}\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className='price'>\r\n                            <div className='coinIcon'>\r\n                                <img alt='btc logo' src='https://app.roqqu.com/static/media/btc.d9c1768c.png'/>\r\n                            </div>\r\n\r\n                            <div className='coinPrice'>\r\n                                <div className='currentPrice'>\r\n                                    ₦7,633,573.84\r\n\r\n                                </div>\r\n                                <small className='note'>\r\n                                    Updated a few seconds ago\r\n                                </small>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <section className='addBank'>\r\n                            <div className='iconWrap'>\r\n                                <div className='icon'>\r\n                                    <FontAwesomeIcon icon={faMoneyBill}/>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='activities'>\r\n                                <button>\r\n                                    <FontAwesomeIcon icon={faPlus}/> Add Bank\r\n                                </button>\r\n                                <div className='note'>\r\n                                    You have not added any bank accounts yet, add one to begin.\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <div className='mainCardWrap'>\r\n\r\n                        <section className='left'>\r\n                            <div className='profileSettings'>\r\n                                <div className='userInfo'>\r\n                                    <div className='userImage'>\r\n\r\n                                        {\r\n                                            ProfileImage === null ? (\r\n                                                    <img src={'https://www.flaticon.com/svg/static/icons/svg/1077/1077114.svg'}  alt='user'/>)\r\n                                                :\r\n\r\n                                                <img src={userImage} alt='user'/>\r\n\r\n                                        }\r\n                                        <button className='camera'>\r\n                                            <FontAwesomeIcon icon={faCamera}/>\r\n                                        </button>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='otherInfo'>\r\n                                        <div className='fullName'>\r\n                                            {\r\n                                                LastName\r\n                                            }\r\n                                            &nbsp;\r\n                                            {\r\n                                                FirstName\r\n                                            }\r\n                                        </div>\r\n                                        <div className='note'>\r\n                                            Email authentication is automatically activated\r\n                                            on your account\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method='post' action='' className='formWrap'>\r\n\r\n                                    <TextInput label={<FontAwesomeIcon icon={faAt}/>}\r\n                                               value={EmailAddress} topLabel='Email' readOnly/>\r\n                                    <TextInput value={FirstName} label={<FontAwesomeIcon icon={faUser}/>} placeHolder='First name' topLabel='First Name'\r\n                                               readOnly/>\r\n                                    <TextInput value={Phone} label={<FontAwesomeIcon icon={faPhone}/>} placeHolder='Phone' topLabel='Phone number' readOnly/>\r\n                                    <TextInput value={LastName} label={<FontAwesomeIcon icon={faUser}/>} topLabel='Last Name' placeHolder='Last Name'\r\n                                               readOnly/>\r\n\r\n                                    <button className='updateBtn' disabled>\r\n                                        <FontAwesomeIcon icon={faChevronUp}/> &nbsp;\r\n                                        &nbsp;\r\n                                        Update\r\n                                    </button>\r\n                                </form>\r\n\r\n\r\n                            </div>\r\n                            <div className='verification'>\r\n                                <section className='illustration'>\r\n                                    {\r\n                                        value ? (<img src={holdingPhoneDark} alt={'holding phone'}/>) : (\r\n                                            <img src={holdingPhone} alt={'holding phone'}/>)\r\n                                    }\r\n\r\n                                </section>\r\n\r\n                                <section className='verificationDetail'>\r\n                                    <div className='header'>\r\n                                        Verification Required\r\n                                    </div>\r\n\r\n                                    <div className='otherInfo'>\r\n                                        Verification needed, your account\r\n                                        verification is incomplete.\r\n                                    </div>\r\n                                    <button>\r\n                                        <FontAwesomeIcon icon={faLongArrowAltUp}/> &nbsp; &nbsp; Increase Account Limit\r\n                                    </button>\r\n                                </section>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className='right'>\r\n                            <div className='referral'>\r\n                                <div className='title'>\r\n                                    <span className='titleBack'>Earn Passive </span> &nbsp;\r\n                                    <span> Income on Truzact</span>\r\n                                </div>\r\n                                <div className='refContent'>\r\n                                    Refer your friends and earn 0.5% on\r\n                                    all their transactions when they sign\r\n                                    up using your referral link. Click here to\r\n                                    get your link.\r\n                                </div>\r\n\r\n                                <hr className='crossLine'/>\r\n\r\n\r\n                                <div className='bottomWrap'>\r\n\r\n                                    <div className='refIllustration'>\r\n                                        <img src={refAI} alt='Referral Ai'/>\r\n                                    </div>\r\n                                    <div className='btnWrap'>\r\n                                        <button className='actionBtn'>\r\n\r\n                                            <FontAwesomeIcon icon={faArrowRight}/>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='accountPreference'>\r\n                                <div className='header'>\r\n                                    Account Preferences\r\n                                </div>\r\n                                <small>\r\n                                    Weekly news letter\r\n                                </small>\r\n                                <div>\r\n                                    <label className=\"switch\">\r\n                                        <input type=\"checkbox\"/>\r\n                                        <span className=\"slider round\">\r\n\r\n                                </span>\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <Footer/>\r\n\r\n\r\n                {/*\r\n\r\n            Mobile version\r\n            */}\r\n\r\n\r\n            </motion.div>\r\n            <div className='mobDash'>\r\n                <div className='mobileHeader'>\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n                </div>\r\n\r\n\r\n                 <motion.div exit=\"out\" initial=\"out\" animate=\"in\"  variants={mobPageTransition} className='mobContent'>\r\n\r\n                    <div className='miniUserProfile'>\r\n                        <section className='userName'>\r\n                            {\r\n                                LastName\r\n                            }\r\n                            &nbsp;\r\n                            {\r\n                                FirstName\r\n                            }\r\n                        </section>\r\n                        <section className='userEmail'>\r\n                            {\r\n                                EmailAddress\r\n                            }\r\n                        </section>\r\n\r\n                        <section className='userImage'>\r\n\r\n                            {\r\n                                ProfileImage === null ? (\r\n                                        <img src={'https://www.flaticon.com/svg/static/icons/svg/1077/1077114.svg'}  alt='user'/>)\r\n                                    :\r\n\r\n                                    <img src={userImage} alt='user'/>\r\n\r\n                            }\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                    <div className='editDetail'>\r\n<div className='phoneUtils'>\r\n<ImPhone/>  <div>{Phone}</div>\r\n</div>\r\n\r\n                        <button className=\"updateBtn\">\r\n                            <GrUpdate />\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='miniBalance'>\r\n<div className='earnings'>\r\n    <div className=\"amount\">\r\n        ₦ {money}\r\n    </div>\r\n    <div className='txt'>\r\n        Your earnings\r\n    </div>\r\n</div>\r\n                        <button className='depositButton'>\r\n\r\n                            <section className='icon'>\r\n                                <FontAwesomeIcon icon={faArrowUp}/>\r\n                            </section>\r\n                            <section className='text'>\r\n                                Deposit\r\n                            </section>\r\n                        </button>\r\n                    </div>\r\n                     <div className='miniButtons'>\r\n                         <button className='saveBtn'>\r\n                             <i> <FontAwesomeIcon icon={faPiggyBank}/></i>\r\n                             <div> Save</div>\r\n                         </button>\r\n\r\n                         <button className='addBankBtn'>\r\n                             <i> <GiTakeMyMoney/></i>\r\n                             <div>Withdraw</div>\r\n                         </button>\r\n                     </div>\r\n\r\n                    <section className='verificationDetail'>\r\n                        <div className='verificationActions'>\r\n                            <div className='verificationAi'>\r\n                                {\r\n                                    value ? (<img src={holdingPhoneDark} alt={'holding phone'}/>) : (\r\n                                        <img src={holdingPhone} alt={'holding phone'}/>)\r\n                                }\r\n                            </div>\r\n                            <div className='verification'>\r\n\r\n\r\n                                <div className='header'>\r\n                                    Verification Required\r\n                                </div>\r\n\r\n                                <div className='otherInfo'>\r\n                                    Verification needed, your account\r\n                                    verification is incomplete.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button>\r\n                            <FontAwesomeIcon icon={faLongArrowAltUp}/> &nbsp; &nbsp; Increase Account Limit\r\n                        </button>\r\n\r\n                    </section>\r\n\r\n                    <section className='accountPref'>\r\n\r\n                    </section>\r\n\r\n                 </motion.div>\r\n\r\n\r\n            </div>\r\n            <MobileNav/>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps) (Profile);\r\n","C:\\reactApp\\truzactv1\\src\\pages\\Dashboard\\Dashboard.jsx",["223","224","225","226","227"],"import React, { useState} from 'react';\r\nimport './DashboardStyle.scss'\r\nimport Notification from \"../../components/Notification\";\r\nimport refAI from \"../../assets/ai/wfh_7.svg\"\r\nimport '../../Style/Responsive/Responsive.Dashbaord.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPiggyBank,\r\n    faChartLine,\r\n    faExchangeAlt,\r\n    faArrowUp,\r\n    faCaretDown,\r\n    faCaretUp,\r\n    faArrowDown,\r\n    faMoneyBillWave, faCopy,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport Portfolio from \"../../components/Portfolio\";\r\nimport Cryptos from \"../../Data/Porfolio\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nimport PriceHistory from \"../../components/PriceHistory\";\r\nimport brandLogo from \"../../assets/img/Truzact logo white horinzontal.png\";\r\nimport Button from \"../../components/Button\";\r\nimport {GiTakeMyMoney,GiPiggyBank} from 'react-icons/gi';\r\nimport {CgCreditCard} from 'react-icons/cg';\r\nimport {IoIosCopy} from 'react-icons/io';\r\nimport MobTop from \"../../components/MobTop\";\r\nimport Menu from \"../../components/Menu\";\r\nimport MobileNav from \"../../components/MobNav\";\r\nimport { motion } from \"framer-motion\"\r\nimport Modal from \"../../components/Modal\";\r\nimport {Tabs, TabList, TabPanels, Tab, TabPanel, useClipboard, useToast} from \"@chakra-ui/react\"\r\n\r\n\r\n\r\n//redux\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst pageAnimation = {\r\n    type:\"spring\",\r\n}\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in:{\r\nopacity:1,\r\n        x:0,\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        x:\"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in:{\r\nopacity:1,\r\n        y:0\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        y:\"-10vh\",\r\n    }\r\n}\r\n\r\nlet money;\r\nconst Dashboard = (props) => {\r\n    const toast = useToast()\r\n    const [value, setValue] = React.useState(\"my refferal link\")\r\n    const { hasCopied, onCopy } = useClipboard(value)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n\r\n    //user info\r\n    const {userData, loading} = props.user\r\n    if(Object.keys(userData).length > 0 ) {\r\n        const {member: {Bitcoin, Ethereum, Dash, BNB, Ripple, Tron, Aave, BitcoinCash}} = props.user.userData\r\n        money = Ethereum + Bitcoin + BNB + Dash + Tron + Ripple + Aave + BitcoinCash\r\n    }else{\r\n        money= 0;\r\n    }\r\n    const activeUrl = window.location.pathname.split('/')\r\n\r\n\r\n    const tempDate = new Date();\r\n    const date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate();\r\n\r\n\r\n\r\n\r\n//page Transition\r\n\r\nconst modalToggle = () =>{\r\n\r\nsetModalOpen(!modalOpen)\r\n    }\r\n\r\n\r\n\r\n\r\n    const copyLink = () =>{\r\n    onCopy()\r\n\r\n\r\n        toast({\r\n            title: \"Copied!\",\r\n            description: \"Share your referral link with friends\",\r\n            duration: 6000,\r\n            position: \"top\",\r\n            status:\"info\",\r\n            isClosable: true,\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n\r\n            <Modal isOpen={modalOpen} onClose={modalToggle}>\r\n                <Tabs>\r\n                    <TabList>\r\n                        <Tab>One</Tab>\r\n                        <Tab>Two</Tab>\r\n                        <Tab>Three</Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanels>\r\n                        <TabPanel>\r\n                            <p>one!</p>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <p>two!</p>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <p>three!</p>\r\n                        </TabPanel>\r\n                    </TabPanels>\r\n                </Tabs>\r\n            </Modal>\r\n\r\n\r\n            <Menu/>\r\n\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={pageTransition} className=\"dashboard\">\r\n                {/*\r\n      Desktop version\r\n      */}\r\n                <Notification/>\r\n\r\n                <div className='cardHead'>\r\n                    <div className='balanceHead'>\r\n                        <div className='titleWrap'>\r\n                            <div className='title'>\r\n                                Total Balance\r\n                            </div>\r\n                            <div className='icon'>\r\n                                <FontAwesomeIcon icon={faPiggyBank}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                       {/* <div className='date'>\r\n                            {\r\n                                date\r\n                            }\r\n\r\n                        </div>*/}\r\n                    </div>\r\n\r\n                    <div className='priceHead'>\r\n                        <div className='titleWrap'>\r\n                            <div className='title'>\r\n                                Price History\r\n                            </div>\r\n                            <div className='icon'>\r\n                                <FontAwesomeIcon icon={faChartLine}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='refHead'>\r\n                        <div className='titleWrap'>\r\n                            <div className='title'>\r\n                                Referrals\r\n                            </div>\r\n                            <div className='icon'>\r\n                                <FontAwesomeIcon icon={faExchangeAlt} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='cardHolder'>\r\n                    <div className='balance'>\r\n\r\n                        {\r\n                            Object.keys(userData).length > 0 &&\r\n                            money < 1 ?\r\n\r\n                                (<section className='moneyWrap'>\r\n\r\n                                    <div className='money'>\r\n                                        <span className='currency'>₦</span>\r\n                                        <span className='amountSmall'>{money}</span>\r\n                                        &nbsp;\r\n                                        <span>\r\n                                        <FontAwesomeIcon icon={faCaretDown} color={'red'}/></span>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <small>\r\n                                        Your earnings\r\n                                    </small>\r\n                                </section>) :\r\n\r\n\r\n                                (<section className='moneyBigWrap'>\r\n\r\n                                    <div className='moneyBig'>\r\n                                        <span className='currency'>₦</span>\r\n                                        <span className='amountBig'>{money}</span>\r\n                                        <span>.00</span>\r\n                                        &nbsp;\r\n\r\n                                        <span> <FontAwesomeIcon icon={faCaretUp} color={'green'}/></span>\r\n\r\n                                    </div>\r\n\r\n                                    <small>\r\n                                        Your earnings\r\n                                    </small>\r\n\r\n\r\n                                </section>)\r\n                        }\r\n\r\n                        <section className='btnLayer'>\r\n                            <Button action={modalToggle}/>\r\n                        </section>\r\n\r\n                        <div className='bottomBtn'>\r\n                            <button className='sellBuyBtn'>\r\n                                <FontAwesomeIcon icon={faMoneyBillWave}/> Buy/Sell\r\n                            </button>\r\n                            <NavLink to='/savings'>\r\n                            <button>\r\n                                <FontAwesomeIcon icon={faPiggyBank}/> Save\r\n                            </button>\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <PriceHistory/>\r\n\r\n\r\n                    <div className='referral'>\r\n                        <div className='title'>\r\n                            <span className='titleBack'>Earn Passive </span> &nbsp;<span> Income on Truzact</span>\r\n                        </div>\r\n                        <div className='refContent'>\r\n                            Refer your friends and earn 0.5% on\r\n                            all their transactions when they sign\r\n                            up using your referral link. Click here to\r\n                            get your link.\r\n                        </div>\r\n\r\n                        <hr className='crossLine'/>\r\n\r\n\r\n                        <div className='bottomWrap'>\r\n\r\n                            <div className='illustration'>\r\n                                <img src={refAI} alt=''/>\r\n                            </div>\r\n                            <div className='btnWrap'>\r\n                                <button className='actionBtn' onClick={copyLink}>\r\n\r\n                                    {\r\n                                        hasCopied ? ('Copied') : ( <FontAwesomeIcon icon={faCopy}/>)\r\n                                    }\r\n\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='otherCard'>\r\n                    <div className='addBank'>\r\n                        <div className='title'>\r\n                            <span className='titleBack'>Add Bank</span> &nbsp;<span> Account</span>\r\n                        </div>\r\n                        <div className='content'>\r\n                            Bank accounts are where we'll deposit\r\n                            your funds when you withdraw, you\r\n                            can add up to 5 bank accounts to your\r\n                            truzact account\r\n                        </div>\r\n                        <div className='btnWrap'>\r\n\r\n                            <button className='addBtn'>\r\n                                <FontAwesomeIcon icon={faArrowDown}/> <span>Withdraw</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='portfolio'>\r\n                        <div className='title'>\r\n                            Your portfolio\r\n                        </div>\r\n                        <div className='portfolioContent'>\r\n                            {\r\n                                Cryptos.map((({name, amount, cryptoIcon}, index) => (\r\n                                    <Portfolio key={index} name={name} amount={amount} cryptoIcon={cryptoIcon}/>\r\n                                )))\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer/>\r\n\r\n\r\n                {/*\r\n\r\n            Mobile version\r\n            */}\r\n\r\n\r\n            </motion.div>\r\n\r\n\r\n            <div className='mobDash'>\r\n                <div className='mobileHeader'>\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n                </div>\r\n                <MobTop/>\r\n                <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={mobPageTransition}  className='mobContent'>\r\n\r\n\r\n\r\n\r\n                    <div className='balanceCardWrap'>\r\n                        <div className='balanceBack'>\r\n\r\n                        </div>\r\n                        <svg width=\"320\" height=\"213\" viewBox=\"0 0 320 213\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path id=\"Rectangle 22\"\r\n                                  d=\"M23.0746 25.9316C25.856 11.1969 38.7991 0.575038 53.7933 0.722015L289.351 3.03102C306.326 3.19742 320\r\n          17.0058 320 33.9819V181.874C320 200.561 303.566 214.987 285.037 212.565L27.4801 178.905C9.84709 176.601\r\n          -2.22262 159.947 1.07591 142.473L23.0746 25.9316Z\"\r\n                                  fill=\"#00068A\"/>\r\n                        </svg>\r\n                        <div className='balanceCard'>\r\n                            <div className='amount'>\r\n                                {  Object.keys(userData).length > 0 &&\r\n                                    money < 1 ?\r\n\r\n                                        (<section className='moneyWrap'>\r\n\r\n                                            <div className='money'>\r\n                                                <span className='currency'>₦</span>\r\n                                                <span className='amountSmall'>{money}</span>\r\n                                                <span>.00</span>\r\n                                                &nbsp;\r\n                                                <span>\r\n                                        <FontAwesomeIcon icon={faCaretDown} color={'red'}/></span>\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <small>\r\n                                                Your earnings\r\n                                            </small>\r\n                                        </section>) :\r\n\r\n\r\n                                        (<section className='moneyBigWrap'>\r\n\r\n                                            <div className='moneyBig'>\r\n                                                <span className='currency'>₦</span>\r\n                                                <span className='amountBig'>{money}</span>\r\n                                                <span>.00</span>\r\n                                                &nbsp;\r\n\r\n                                                <span> <FontAwesomeIcon icon={faCaretUp} color={'green'}/></span>\r\n\r\n                                            </div>\r\n\r\n                                            <small>\r\n                                                Your earnings\r\n                                            </small>\r\n\r\n\r\n                                        </section>)\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            <div className='btnCont'>\r\n                                <button className='depositBtn' onClick={modalToggle}>\r\n\r\n                                    <section className='icon'>\r\n                                        <FontAwesomeIcon icon={faArrowUp}/>\r\n                                    </section>\r\n                                    <section className='text'>\r\n                                        Deposit\r\n                                    </section>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='buttonsWrap'>\r\n\r\n                        <button>\r\n                            <div className='icon withdraw'>\r\n<GiTakeMyMoney/>\r\n                            </div>\r\n                            <div className='title'>\r\n                                Withdraw\r\n                            </div>\r\n                        </button>\r\n\r\n                        <button>\r\n                            <div className='icon buySell'>\r\n<CgCreditCard/>\r\n                            </div>\r\n                            <div className='title'>\r\n                                Buy/Sell\r\n                            </div>\r\n                        </button>\r\n\r\n\r\n                        <NavLink to='/savings'>\r\n                            <button>\r\n                                <div className='icon save'>\r\n                                    <GiPiggyBank/>\r\n                                </div>\r\n                                <div className='title'>\r\n                                    Save\r\n                                </div>\r\n                            </button>\r\n                        </NavLink>\r\n\r\n\r\n\r\n                    <button onClick={copyLink}>\r\n                        <div className='icon ref'>\r\n<IoIosCopy/>\r\n                       </div>\r\n                        <div className='title'>\r\n                            Referral\r\n                        </div>\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                    <PriceHistory/>\r\n\r\n\r\n                    <div className='referral'>\r\n                        <div className='title'>\r\n                            <span className='titleBack'>Earn Passive </span> &nbsp;<span> Income on Truzact</span>\r\n                        </div>\r\n                        <div className='refContent'>\r\n                            Refer your friends and earn 0.5% on\r\n                            all their transactions when they sign\r\n                            up using your referral link. Click here to\r\n                            get your link.\r\n                        </div>\r\n\r\n                        <button className='actionBtn' onClick={copyLink}>\r\n                            {\r\n                                hasCopied ? ('Copied') : ( <FontAwesomeIcon icon={faCopy}/>)\r\n                            }\r\n\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                    <div className='addBank'>\r\n                        <div className='title'>\r\n                            <span className='titleBack'>Add Bank</span> &nbsp;<span> Account</span>\r\n                        </div>\r\n                        <div className='content'>\r\n                            Bank accounts are where we'll deposit\r\n                            your funds when you withdraw, you\r\n                            can add up to 5 bank accounts to your\r\n                            truzact account\r\n                        </div>\r\n\r\n\r\n                        <button className='addBtn'>\r\n                            <FontAwesomeIcon icon={faArrowDown}/> <span>Withdraw</span>\r\n                        </button>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='portfolio'>\r\n                        <div className='title'>\r\n                            Your portfolio\r\n                        </div>\r\n                        <div className='portfolioContent'>\r\n                            {\r\n                                Cryptos.map((({name, amount, cryptoIcon}, index) => (\r\n                                    <Portfolio key={index} name={name} amount={amount} cryptoIcon={cryptoIcon}/>\r\n                                )))\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </motion.div>\r\n\r\n            </div>\r\n\r\n            <MobileNav/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nDashboard.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps) (Dashboard);\r\n","C:\\reactApp\\truzactv1\\src\\pages\\Home\\Home.js",["228","229","230"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TextTransition, {presets} from \"react-text-transition\";\r\nimport {HiOutlineArrowNarrowRight, HiLocationMarker} from 'react-icons/hi';\r\nimport {FaMobile, FaPiggyBank} from 'react-icons/fa';\r\nimport {IoMdMailUnread} from 'react-icons/io';\r\nimport {IoWallet} from 'react-icons/io5';\r\nimport {BiShieldQuarter, BiSupport} from 'react-icons/bi';\r\nimport {FiSend} from 'react-icons/fi';\r\nimport {GiTakeMyMoney, GiMoneyStack} from 'react-icons/gi';\r\nimport {TimelineLite, Power3, gsap} from 'gsap'\r\nimport './Home.scss';\r\nimport '../../Style/Responsive/Responsive.Home.scss'\r\nimport curveLine from '../../assets/curve-line.svg';\r\nimport vectorFrame from '../../assets/banner-vector-shape.svg'\r\nimport biCardBrown from '../../assets/bigCard.svg'\r\nimport bigCardMilk from '../../assets/bigCardBrown.svg'\r\nimport truzactLogo from '../../assets/img/logo1.png'\r\nimport truzactLogoW from '../../assets/img/Truzact logo white horinzontal.png'\r\nimport introImage from '../../assets/introimage.png'\r\nimport introShape from '../../assets/introshape-brown.svg'\r\nimport introShapeBlue from '../../assets/inroshape-blue.svg'\r\nimport getStartedInfoBack from '../../assets/getStartedInfoback.svg'\r\nimport ReactTextTransition from \"react-text-transition\";\r\nimport {toggleHomeMenu} from \"../../redux/actions/dataActions\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\r\nimport {FaTwitter, FaFacebook, FaInstagram, FaTags} from \"react-icons/fa\"\r\nimport {HiUserAdd} from \"react-icons/hi\"\r\nimport googlePlay from \"../../assets/img/googleplay.png\";\r\nimport appleStore from \"../../assets/img/applestore.png\";\r\nimport Fade from 'react-reveal/Fade'\r\n\r\n\r\nconst TEXTS = [\r\n    \"Secure Crypto Savings And Fast Withdrawals\",\r\n    \"Easy way to buy and sell cryptocurrency\",\r\n];\r\n\r\nconst customers = [\r\n    \"Micheal\", \"Kingsley\", \"Kayode\"\r\n]\r\n\r\n\r\nconst testimonials = [\r\n    \" 'Quis commodo velit quis cupidatat non amet aliqua sint veniam labore. Culpa ea laboris consequat mollit proident Lorem cupidatat officia fugiat. Tempor sunt non ullamco irure in proident. Laboris minim esse qui non id et anim commodo. Esse id do irure ut eiusmod aliqua irure dolor in est ullamco culpa enim.' \",\r\n    \"Quis deserunt tempor consectetur id ea. Aute sunt eu minim nostrud officia excepteur duis et tempor do dolor culpa. Cillum nostrud quis magna consequat.\",\r\n    \"Aute in id ullamco laboris aute tempor magna dolore ad laborum.\",\r\n    \"Exercitation ullamco qui occaecat dolore ex cillum exercitation commodo magna Lorem in laborum do do. Laboris ad mollit adipisicing ad occaecat fugiat tempor commodo irure magna culpa. Culpa eiusmod nisi sit non ipsum.\"\r\n];\r\n\r\n\r\nconst HomeComponent = (props) => {\r\n\r\n\r\n    const randomNumber = () => Math.floor(Math.random() * 9999999999 + 10000000000);\r\n    const [index, setIndex] = useState(0);\r\n    const [textIndex, setTextIndex] = useState(0);\r\n    const [paragraphIndex, setParagraphIndex] = useState(0);\r\n    const [number, setNumber] = useState(randomNumber());\r\n    const {homeMenu} = props.data\r\n    const {toggleHomeMenu} = props\r\n\r\n\r\n    let t1 = new TimelineLite();\r\n    useEffect(() => {\r\n\r\n\r\n        const intervalId = setInterval(() =>\r\n                setIndex(index => index + 1),\r\n            7000 // every 7 seconds\r\n        );\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setNumber(randomNumber())\r\n            setTextIndex(textIndex + 1,)\r\n            setParagraphIndex(paragraphIndex + 1)\r\n        }, 8000);\r\n    }, [paragraphIndex,textIndex])\r\n\r\n    useEffect(() => {\r\n        t1.from('.smallText', {\r\n            opacity: 0,\r\n            y: -10,\r\n            ease: Power3.easeInOut,\r\n        }).from('.firstText', {\r\n            opacity: 0,\r\n            y: -10,\r\n            ease: Power3.easeInOut,\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const openMenu = () => {\r\n        //t1.reverse();\r\n        toggleHomeMenu()\r\n        if (homeMenu === false) {\r\n            t1.to(\".nav\", {\r\n                position: 'fixed',\r\n            });\r\n            gsap.to(\".menuStickOne\", {\r\n                duration: 0.4,\r\n                y: 8,\r\n                rotation: 45,\r\n                ease: Power3.easeInOut\r\n            })\r\n            gsap.to(\".menuStickTwo\", {\r\n                y: -8,\r\n                duration: 0.4,\r\n                rotation: -45,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n            gsap.to(\".mobileMenu\", {\r\n                display: 'flex',\r\n                overflow: 'hidden',\r\n                opacity: 1,\r\n                duration: 0.4,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n        } else {\r\n            gsap.to(\".menuStickOne\", {\r\n                y: 0,\r\n                rotation: 0,\r\n                ease: Power3.easeInOut\r\n            });\r\n            gsap.to(\".menuStickTwo\", {\r\n                y: 0,\r\n                rotation: 0,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n\r\n            gsap.to(\".mobileMenu\", {\r\n                display: 'none',\r\n                overflow: 'hidden',\r\n                opacity: 0,\r\n                duration: 0.4,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n            gsap.to(\".nav\", {\r\n                position: 'relative',\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className='home'>\r\n\r\n\r\n            <div className='homeBannerWrap'>\r\n                <menu className='homeMenu'>\r\n                    <nav className='nav'>\r\n                        <div className='logo'>\r\n                            <LazyLoadImage effect={'blur'} src={truzactLogoW} alt='logo'/>\r\n                        </div>\r\n\r\n                        <button className='mobMenuBtn' onClick={openMenu} aria-label=\"mob Menu Button\">\r\n                            <div className='menuStickOne'>\r\n\r\n                            </div>\r\n\r\n                            <div className='menuStickTwo'>\r\n\r\n                            </div>\r\n                        </button>\r\n                        <ul>\r\n                            <li>\r\n                                Home\r\n                            </li>\r\n                            <li>\r\n                                About us\r\n                            </li>\r\n                            <li>\r\n                                Contact us\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/auth'>\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className='signUp'>\r\n                                <Link to='/auth'>\r\n                                    <HiUserAdd/> Join us for free\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <div className='mobileMenu'>\r\n                        <ul>\r\n                            <li>\r\n                                Home\r\n                            </li>\r\n                            <li>\r\n                                About us\r\n                            </li>\r\n                            <li>\r\n                                Contact us\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/auth'>\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className='signUp'>\r\n                                <Link to='/auth'>\r\n                                    Join us for free <HiUserAdd/>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </menu>\r\n\r\n                <div className='homeBanner'>\r\n                    {/*\r\n                     <div className='particles'>\r\n                        <Particles\r\n                            className='particle'\r\n                            params={{\r\n                                \"particles\": {\r\n                                    \"number\": {\r\n                                        \"value\": 260,\r\n                                        \"density\": {\r\n                                            \"enable\": false\r\n                                        }\r\n                                    },\r\n                                    \"size\": {\r\n                                        \"value\": 3,\r\n                                        \"random\": true,\r\n                                        \"anim\": {\r\n                                            \"speed\": 4,\r\n                                            \"size_min\": 0.3\r\n                                        }\r\n                                    },\r\n                                    \"line_linked\": {\r\n                                        \"enable\": false\r\n                                    },\r\n                                    \"move\": {\r\n                                        \"random\": true,\r\n                                        \"speed\": 1,\r\n                                        \"direction\": \"top\",\r\n                                        \"out_mode\": \"out\"\r\n                                    }\r\n                                },\r\n                                \"interactivity\": {\r\n                                    \"events\": {\r\n                                        \"onhover\": {\r\n                                            \"enable\": true,\r\n                                            \"mode\": \"bubble\"\r\n                                        },\r\n                                        \"onclick\": {\r\n                                            \"enable\": true,\r\n                                            \"mode\": \"repulse\"\r\n                                        }\r\n                                    },\r\n                                    \"modes\": {\r\n                                        \"bubble\": {\r\n                                            \"distance\": 250,\r\n                                            \"duration\": 2,\r\n                                            \"size\": 0,\r\n                                            \"opacity\": 0\r\n                                        },\r\n                                        \"repulse\": {\r\n                                            \"distance\": 400,\r\n                                            \"duration\": 4\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }}/>\r\n                    </div>\r\n                    */}\r\n\r\n                    <div className='bannerContent'>\r\n                        <section className='leftContent'>\r\n                            <div className='firstText'>\r\n                                <line/>\r\n                                Next Gen wallet\r\n                            </div>\r\n                            <div className='bigText'>\r\n                                <TextTransition\r\n                                    delay={1}\r\n                                    direction='down'\r\n                                    noOverflow={false}\r\n                                    text={TEXTS[index % TEXTS.length]}\r\n                                    springConfig={presets.wobbly}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className='smallText'>\r\n                                Truzact is the Safest and trusted way to buy, sell and save cryptocurrencies and\r\n                                earn 8-10% Interest per annum.\r\n                            </div>\r\n                            <button className='startHere'>\r\n                                <Link to='/auth'>\r\n                                    Join us for free <HiOutlineArrowNarrowRight/>\r\n                                </Link>\r\n\r\n                            </button>\r\n                            {/*   <div className='cryptoBox'>\r\n\r\n                            </div>*/}\r\n\r\n                        </section>\r\n                        <section className='rightContent'>\r\n\r\n\r\n                            <div className='bigCardBrown'>\r\n\r\n                                <img src={biCardBrown} alt='Big Card Brown' className='cardBrown'/>\r\n                                <img src={bigCardMilk} alt='Big Card Brown' className='cardMilk'/>\r\n\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                    </div>\r\n                    <div className='curveLine'>\r\n\r\n                        <img src={curveLine} alt='curve Line'/>\r\n                    </div>\r\n\r\n                    <div className='vectorShape'>\r\n                        <img src={vectorFrame} alt='Vector shape'/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='homeContainer'>\r\n                <div className='intro'>\r\n                    <div className='introImages'>\r\n                        <Fade bottom>\r\n                            <div className='imageWrap'>\r\n\r\n                                <LazyLoadImage src={introShape} className='introShape' alt='intro Shape'/>\r\n\r\n                                <LazyLoadImage effect={'blur'} src={introImage} className='introImage'\r\n                                               alt='intro Image'/>\r\n\r\n                                <LazyLoadImage src={introShapeBlue} className='introShapeBlue' alt='intro Shape Blue'/>\r\n\r\n                            </div>\r\n                        </Fade>\r\n                    </div>\r\n                    <Fade bottom cascade>\r\n                        <div className='introMessages'>\r\n\r\n                            <div className='introHeader'>\r\n                                Why Truzact\r\n                            </div>\r\n                            <div className='introText'>\r\n                                Truzact is a secure way to Buy, Sell and save cryptocurrencies. With wealth growth at\r\n                                heart,\r\n                                we help millennials save their digital assets.\r\n                            </div>\r\n                            <div className='introTextTwo'>\r\n                                With your debit card or your own virtual bank account number, easily save and invest\r\n                                into\r\n                                cryptocurrencies. Convert your local currency to USDT (Crypto USDT) and gain stability\r\n                                with\r\n                                your money. Complete transaction in just few seconds and withdraw your Bitcoin and\r\n                                Altcoins\r\n                                directly into your local bank account without delays.\r\n                            </div>\r\n                            <Link to='/auth'>\r\n                                <button className='createAccount'>\r\n                                    <HiUserAdd/> Join us for free\r\n                                </button>\r\n                            </Link>\r\n\r\n                        </div>\r\n                    </Fade>\r\n                </div>\r\n\r\n                <div className='features'>\r\n                    <Fade bottom>\r\n                        <div className='featureText'>\r\n\r\n\r\n                            <div className='featureHeader'>\r\n                                Our Unique Features\r\n                            </div>\r\n                            <div className='featureSubText'>\r\n                                There are just many reasons to stick with Truzact\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Fade>\r\n                    <div className='featuresWrap'>\r\n                        <Fade bottom cascade>\r\n                            <div className='featureCont'>\r\n\r\n                                <div className='feature'>\r\n\r\n\r\n                                    <div className='icons'>\r\n                                        <div className='iconBox'>\r\n                                            <FaMobile/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='featureInfoWrap'>\r\n                                        <div className='info'>\r\n                                            <div className='infoHead'>\r\n                                                Mobile Apps\r\n                                            </div>\r\n                                            <div className='infoText'>\r\n                                                Enjoy seamless experience with Truzact mobile application at your own\r\n                                                comfort.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='feature'>\r\n\r\n\r\n                                    <div className='icons'>\r\n                                        <div className='iconBox'>\r\n                                            <IoWallet/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='featureInfoWrap'>\r\n                                        <div className='info'>\r\n                                            <div className='infoHead'>\r\n                                                Multiple wallets\r\n                                            </div>\r\n                                            <div className='infoText'>\r\n                                                Truzact supports Bitcoin, Ethereum, BNB, and other altcoins with high\r\n                                                liquidity for you power of options.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='feature'>\r\n\r\n\r\n                                    <div className='icons'>\r\n                                        <div className='iconBox'>\r\n                                            <FaPiggyBank/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='featureInfoWrap'>\r\n                                        <div className='info'>\r\n                                            <div className='infoHead'>\r\n                                                Savings\r\n                                            </div>\r\n                                            <div className='infoText'>\r\n                                                We help users build wealth by encouraging them to save and invest their\r\n                                                digital ass\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fade>\r\n                        <Fade bottom cascade>\r\n                            <div className='featureCont'>\r\n\r\n                                <div className='feature'>\r\n\r\n\r\n                                    <div className='icons'>\r\n                                        <div className='iconBox'>\r\n                                            <BiShieldQuarter/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='featureInfoWrap'>\r\n                                        <div className='info'>\r\n                                            <div className='infoHead'>\r\n                                                Safe and Secure\r\n                                            </div>\r\n                                            <div className='infoText'>\r\n                                                Truzact uses the highest levels of Internet Security, and it is secured\r\n                                                by\r\n                                                256 bits SSL security encryption to ensure that your information is\r\n                                                completely protected from fraud.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='feature'>\r\n\r\n\r\n                                    <div className='icons'>\r\n                                        <div className='iconBox'>\r\n                                            <BiSupport/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='featureInfoWrap'>\r\n                                        <div className='info'>\r\n                                            <div className='infoHead'>\r\n                                                Amazing support\r\n                                            </div>\r\n                                            <div className='infoText'>\r\n                                                Our dedicated support team is ever available 24/7 to attend to your need\r\n                                                if\r\n                                                you ever have any problem with your Truzact account.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='feature'>\r\n\r\n\r\n                                    <div className='icons'>\r\n                                        <div className='iconBox'>\r\n                                            <GiTakeMyMoney/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='featureInfoWrap'>\r\n                                        <div className='info'>\r\n                                            <div className='infoHead'>\r\n                                                Instant withdrawal\r\n                                            </div>\r\n                                            <div className='infoText'>\r\n                                                Get instant fiat settlement directly into your local bank at the best\r\n                                                market\r\n                                                rates.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fade>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className='getStarted'>\r\n\r\n\r\n                    <div className='getStartedText'>\r\n\r\n                        <Fade bottom>\r\n                            <div className='getStartedHeader'>\r\n                                Get Started With Truzact\r\n                            </div>\r\n                            <div className='featureSubText'>\r\n                                Start Investing into cryptocurrencies, learn about Bitcoin with\r\n                                interactive guides. It’s fun, easy, and takes only a few minutes!\r\n                            </div>\r\n                        </Fade>\r\n                    </div>\r\n                    <Fade bottom cascade>\r\n                        <div className='getStartedInfoWrap'>\r\n\r\n                            <div className='getStartedInfo'>\r\n                                <img src={getStartedInfoBack} alt='Get started back'/>\r\n                                <div className='getStartedContent'>\r\n                                    <div className='contentIcon'>\r\n                                        <GiMoneyStack/>\r\n                                    </div>\r\n\r\n                                    <div className='contentHead'>\r\n                                        Deposit Money from card\r\n                                    </div>\r\n                                    <div className='contentText'>\r\n                                        Easily fund your account using\r\n                                        your Naira debit card and get\r\n                                        credited with your preferred\r\n                                        crypto instantly.\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className='getStartedInfo'>\r\n                                <img src={getStartedInfoBack} alt='Get started back'/>\r\n\r\n\r\n                                <div className='getStartedContent'>\r\n                                    <div className='contentIcon'>\r\n                                        <FaTags/>\r\n                                    </div>\r\n\r\n                                    <div className='contentHead'>\r\n                                        Instant Buy and Sell\r\n                                    </div>\r\n                                    <div className='contentText'>\r\n                                        Buy and sell your favourite\r\n                                        cryptocurrencies intantly.\r\n                                        Get started with as little N500.\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className='getStartedInfo'>\r\n                                <img src={getStartedInfoBack} alt='Get started back'/>\r\n                                <div className='getStartedContent'>\r\n                                    <div className='contentIcon'>\r\n                                        <FiSend/>\r\n                                    </div>\r\n\r\n                                    <div className='contentHead'>\r\n                                        Send and Receive Gobally\r\n                                    </div>\r\n                                    <div className='contentText'>\r\n                                        Send and recieve money\r\n                                        instantly from anywhere in\r\n                                        the world and withdraw Naira\r\n                                        instantly into your bank\r\n                                        account.\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                </div>\r\n                <Fade bottom>\r\n                    <div className='portfolio'>\r\n\r\n                        <span>30,000+ </span> &nbsp; people save and trade with Truzact everyday.\r\n                    </div>\r\n                </Fade>\r\n\r\n\r\n                <div className='subscribe'>\r\n                    <Fade bottom>\r\n                        <div className='subscribeTitle'>\r\n                            Get in touch with us\r\n                        </div>\r\n                        <div className='subscribeInput'>\r\n                            <input placeholder='Enter email address' type='text'/>\r\n                            <button> Talk to us ></button>\r\n                        </div>\r\n                    </Fade>\r\n                </div>\r\n\r\n                <div className='testimonial'>\r\n                    <div className='testimonialTitle'>\r\n                        What people are saying about truzact\r\n                    </div>\r\n                    <section className=\"inline\">\r\n                        <blockquote>\r\n                            <ReactTextTransition\r\n                                text={testimonials[paragraphIndex % customers.length]}\r\n                                spring={presets.gentle}\r\n                                className=\"customerTestimony\"\r\n                                //style={{ height: \"180px\" }}\r\n                            /></blockquote>\r\n\r\n                        <ReactTextTransition\r\n                            text={customers[textIndex % customers.length]}\r\n                            spring={presets.gentle}\r\n                            className=\"customerName\"\r\n                            delay={300}\r\n                            inline\r\n                        />\r\n                    </section>\r\n                </div>\r\n\r\n                <footer className='footer'>\r\n\r\n                    <div className='topFooter'>\r\n                        <section className='companyProfile'>\r\n                            <div className='brandLogo'>\r\n                                <img src={truzactLogo} alt='truzact logo'/>\r\n                            </div>\r\n                            <div className='about'>\r\n                                Truzact is a secure way to Buy,\r\n                                Sell and save cryptocurrencies.\r\n                            </div>\r\n\r\n                            <section className='footerContact'>\r\n\r\n\r\n                                <div><HiLocationMarker/> Nigeria</div>\r\n                                <div><IoMdMailUnread/> info@truzact.com</div>\r\n\r\n                            </section>\r\n                            <div className='socialButtons'>\r\n                                <ul>\r\n                                    <li>\r\n                                        <FaTwitter/>\r\n                                    </li>\r\n                                    <li>\r\n                                        <FaInstagram/>\r\n                                    </li>\r\n                                    <li>\r\n                                        <FaFacebook/>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </section>\r\n                        <section className='resources'>\r\n                            <div className='title'>\r\n                                Resources\r\n                            </div>\r\n                            <ul>\r\n                                <li>\r\n                                    About us\r\n                                </li>\r\n                                <li>\r\n                                    Contact us\r\n                                </li>\r\n                                <li>\r\n                                    Blog\r\n                                </li>\r\n                                <li>\r\n                                    Privacy policy\r\n                                </li>\r\n                                <li>\r\n                                    Terms\r\n                                </li>\r\n                            </ul>\r\n                        </section>\r\n                        <section className='quickLinks'>\r\n                            <div className='footerFirstSide'>\r\n                                <section className='head'>\r\n                                    Download the Truzact Mobile App\r\n                                </section>\r\n                                <div className='message'>\r\n                                    Buy and sell faster on the Roqqu mobile apps,\r\n                                    available on Playstore and App store\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='footerMiddleSide'>\r\n                                <img src={googlePlay} alt='goggle play'/>\r\n                                <img src={appleStore} alt='apple store link'/>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                    <section className='bottomFooter'>\r\n\r\n\r\n                        <div className='copy'>\r\n                            Copyright &copy; Truzact&trade;  2021\r\n                        </div>\r\n                    </section>\r\n\r\n                </footer>\r\n\r\n\r\n                {/*\r\n                MOBILE STARTS\r\n\r\n                */}\r\n\r\n                <div className='mobPortfolio'>\r\n                    <div>30,000+ people save and trade with Truzact everyday.</div>\r\n                </div>\r\n\r\n                <div className='mobSubscribe'>\r\n\r\n                    <div className='subscribeInput'>\r\n                        <input placeholder='Enter email address' type='text'/>\r\n\r\n                    </div>\r\n                    <button> Talk to us ></button>\r\n\r\n                </div>\r\n\r\n                <div className='mobFooter'>\r\n                    <section className='companyProfile'>\r\n                        <div className='brandLogo'>\r\n                            <img src={truzactLogo} alt='truzact logo'/>\r\n                        </div>\r\n\r\n                        <div className='about'>\r\n                            <div>\r\n                                Truzact is a secure way to Buy, Sell and save cryptocurrencies.\r\n                            </div>\r\n                            <div><HiLocationMarker/> Nigeria</div>\r\n                            <div><IoMdMailUnread/> info@truzact.com</div>\r\n                        </div>\r\n                        <div className='socialButtons'>\r\n                            <ul>\r\n                                <li>\r\n                                    <FaTwitter/>\r\n                                </li>\r\n                                <li>\r\n                                    <FaInstagram/>\r\n                                </li>\r\n                                <li>\r\n                                    <FaFacebook/>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className='footerFirstSide'>\r\n                            <section className='head'>\r\n                                Download the Truzact Mobile App\r\n                            </section>\r\n                            <div className='message'>\r\n                                Buy and sell faster on the Roqqu mobile apps,\r\n                                available on Playstore and App store\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='footerMiddleSide'>\r\n                            <img src={googlePlay} alt='goggle play'/>\r\n                            <img src={appleStore} alt='apple store link'/>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className='bottomFooter'>\r\n                        <div className='copy'>\r\n                            Copyright &copy; Truzact&trade;  2021\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n\r\n                {/*\r\n                END MOBILE STARTS\r\n\r\n                */}\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nHomeComponent.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n    toggleHomeMenu: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    toggleHomeMenu,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(HomeComponent);\r\n","C:\\reactApp\\truzactv1\\src\\redux\\reducers\\userReducer.js",["231"],"import {\r\n    CLEAR_ERRORS,\r\n    LOADING_DATA,\r\n    LOADING_USER,\r\n    SET_AUTHENTICATED,\r\n    SET_ERRORS, SET_KYC, SET_SUCCESS,\r\n    SET_UNAUTHENTICATED,\r\n    SET_USER, UPDATE_PASS\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    userData: [],\r\n    loading: false,\r\n    errors: null,\r\n    successRes: null,\r\n    kycData: [],\r\n    allData:[],\r\n    authenticated: false\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                loading: false\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n       /* case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loadingData: true\r\n            }*/\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload,\r\n            };\r\n        case SET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                successRes: action.payload\r\n            }\r\n        case SET_KYC:\r\n            return {\r\n                ...state,\r\n                kycData: action.payload\r\n            }\r\n        case UPDATE_PASS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allData: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n\r\n            //return initialState;\r\n            return {\r\n                ...state,\r\n                authenticated: false,\r\n                userData: [],\r\n                errors: null,\r\n            }\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                loading: false,\r\n                userData: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","C:\\reactApp\\truzactv1\\src\\redux\\reducers\\dataReducer.js",["232","233","234"],"import {TOGGLE_AUTH_UI, MOB_MENU_UI, LOADING_UI, SET_ERRORS, CLEAR_ERRORS, TOGGLE_HOME_MENU} from \"../types\";\r\n\r\n\r\nconst initialState = {\r\n    isLoginUi: true,\r\n    mobMenuState: false,\r\n    errors: null,\r\n    homeMenu: false\r\n\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case LOADING_UI :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case TOGGLE_AUTH_UI:\r\n            return {\r\n                ...state,\r\n                isLoginUi: action.payload,\r\n            }\r\n        case MOB_MENU_UI:\r\n            return {\r\n                ...state,\r\n                mobMenuState: !state.mobMenuState,\r\n                loading: false\r\n            }\r\n        case TOGGLE_HOME_MENU:\r\n            return {\r\n                ...state,\r\n                homeMenu: !state.homeMenu,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\reactApp\\truzactv1\\src\\components\\MobTop.js",["235","236"],"import React from 'react';\r\nimport userImg from '../assets/img/me.jpg'\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport userImage from \"../assets/img/me.jpg\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux'\r\nconst MobTop = (props) => {\r\n    const {title} = props\r\n    const {userData:{member:{ProfileImage}}} = props.user\r\n\r\n    const activeUrl = window.location.pathname.split('/')\r\n    return (\r\n        <div className='mobTop'>\r\n            <section className='wrap'>\r\n\r\n<div className='pageTitle'>\r\n    {\r\n        title ? title : activeUrl\r\n    }\r\n</div>\r\n\r\n                <Link to='/setting' className='userImg'>\r\n\r\n                    {\r\n                        ProfileImage === null ? (\r\n                                <img src={'https://www.flaticon.com/svg/static/icons/svg/1077/1077114.svg'}  alt='user'/>)\r\n                            :\r\n\r\n                            <img src={userImage} alt='user'/>\r\n\r\n                    }\r\n                </Link>\r\n            </section>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nMobTop.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps) (MobTop);\r\n","C:\\reactApp\\truzactv1\\src\\components\\Footer.js",[],"C:\\reactApp\\truzactv1\\src\\components\\Notification.js",["237","238"],"import React, {useState} from 'react';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faSun,\r\n    faMoon,\r\n    faInfoCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport useDarkMode from \"use-dark-mode\";\r\nimport {TimelineLite, Power3, gsap} from 'gsap'\r\n\r\nconst Notification = () => {\r\n    const darkMode = useDarkMode(true);\r\n    const {value} = useDarkMode(false);\r\n    const [menuState, setMenuState] = useState(false)\r\n    let t1 = new TimelineLite();\r\n\r\n    const [placement, setPlacement] = useState(\"left\")\r\n\r\n    const toggleMenu = () =>{\r\n\r\n\r\n        if (menuState === true) {\r\n            //menu open\r\n            gsap.to(\".tabMenuBtn\", {\r\n                ease: Power3.easeInOut\r\n            })\r\n\r\n            t1.to(\".menuWrap\", {\r\n                display: 'flex',\r\n                ease: Power3.easeInOut,\r\n                x:'0px',\r\n            });\r\n            gsap.to(\".tabMenuStickOne\", {\r\n                duration: 0.4,\r\n                y: 8,\r\n                rotation: 45,\r\n                ease: Power3.easeInOut\r\n            })\r\n            gsap.to(\".tabMenuStickTwo\", {\r\n                y: -8,\r\n                duration: 0.4,\r\n                rotation: -45,\r\n                ease: Power3.easeInOut,\r\n            });\r\n            gsap.to(\".tabMenuStickThree\", {\r\n                opacity: 0,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n            gsap.to(\".mobileMenu\", {\r\n                display: 'flex',\r\n                overflow: 'hidden',\r\n                opacity: 1,\r\n                duration: 0.4,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n        } else {\r\n            gsap.to(\".tabMenuStickOne\", {\r\n                y: 0,\r\n                rotation: 0,\r\n                ease: Power3.easeInOut\r\n            });\r\n            gsap.to(\".tabMenuStickTwo\", {\r\n                y: 0,\r\n                rotation: 0,\r\n                ease: Power3.easeInOut,\r\n            });\r\n  gsap.to(\".tabMenuStickThree\", {\r\n      y: 0,\r\n      rotation: 0,\r\n                opacity: 1,\r\n                ease: Power3.easeInOut,\r\n            });\r\n\r\n\r\n            gsap.to(\".menuWrap\", {\r\n                display: 'none',\r\n                ease: Power3.easeInOut,\r\n                x:'-300px',\r\n            });\r\n\r\n            gsap.to(\".tabMenuBtn\", {\r\n                x: '0',\r\n                ease: Power3.easeInOut\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='notificationWrap'>\r\n\r\n            <button className='tabMenuBtn' onClick={() => toggleMenu(setMenuState(!menuState))} aria-label=\"mob Menu Button\">\r\n                <div className='tabMenuStickOne'>\r\n\r\n                </div>\r\n\r\n                <div className='tabMenuStickTwo'>\r\n\r\n                </div> <div className='tabMenuStickThree'>\r\n\r\n                </div>\r\n            </button>\r\n\r\n            <div className='notification'>\r\n                <div className='notiIcon'>\r\n<FontAwesomeIcon icon={faInfoCircle} className='icon'/>\r\n                </div>\r\n                <div className='notiContent'>\r\n                    <div className=\"notiHead\">\r\n                        Earn up to 15% on USDT savings\r\n                    </div>\r\n                    <div className='notiMessage'>\r\n\r\n\r\n                        <div className='message'>\r\n                            Ever wanted to earn money in crypto, here's an opportunity, save USDT on Roqqu and earn up\r\n                            to 15% interest per annum paid daily,\r\n                            update your mobile app now.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className='themeToggle' onClick={darkMode.toggle}>\r\n                {value ?<FontAwesomeIcon icon={faSun}/> :  <FontAwesomeIcon icon={faMoon}/> }\r\n\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","C:\\reactApp\\truzactv1\\src\\components\\Tab-Pane.js",[],"C:\\reactApp\\truzactv1\\src\\components\\Button.js",[],"C:\\reactApp\\truzactv1\\src\\components\\TextInput.js",[],"C:\\reactApp\\truzactv1\\src\\components\\TransactionFeed.js",["239","240"],"import React from 'react';\r\nimport '../Style/Feed.scss'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowsAltV, faCircle, faReplyAll} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TransactionFeed = ({tag, date, amount, address, type,label}) => {\r\n    return (\r\n        <div className='feed'>\r\n            <section className='feedTop'>\r\n                <div className={`tag ${type === 'buySell' ? 'buySell' : type === 'withdrawal' ? 'withdrawal' : 'deposit' }`}>\r\n                    {tag}\r\n                </div>\r\n                <div className='date'>\r\n                    {date}\r\n                </div>\r\n            </section>\r\n            <section className='feedBottom'>\r\n                <div className='amount'>\r\n                 <FontAwesomeIcon icon={faCircle} className='icon'/> &nbsp;&nbsp;&nbsp; <div> ₦{amount} </div>\r\n                </div>\r\n\r\n                <div className='address'>\r\n                    <div className='icon'>\r\n\r\n                    </div>\r\n                    {\r\n                        address\r\n                    }\r\n                </div>\r\n\r\n                <div className='label'>\r\n                    {\r\n                        label\r\n                    }\r\n\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionFeed;\r\n","C:\\reactApp\\truzactv1\\src\\Data\\Porfolio.js",[],"C:\\reactApp\\truzactv1\\src\\components\\MobNav.js",["241","242","243","244"],"import React, {useEffect, useState} from 'react';\r\nimport {NavLink,useHistory } from \"react-router-dom\";\r\nimport {NavData, SubNavDATA} from \"../Data-Center/MobileMenu\";\r\nimport {gsap, Power3} from \"gsap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMoon, faSun} from \"@fortawesome/free-solid-svg-icons\";\r\nimport useDarkMode from \"use-dark-mode\";\r\nimport userImg from '../assets/img/me.jpg'\r\nimport {getUserData, logoutUser} from \"../redux/actions/userActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport userImage from \"../assets/img/me.jpg\";\r\n\r\nconst MobileNav = (props) => {\r\n    let history = useHistory();\r\n\r\n    const { logoutUser} = props\r\n    const [open, setClosed] = useState(false)\r\n    const activeUrl = window.location.pathname.split('/')\r\n\r\n    const darkMode = useDarkMode(true);\r\n    const {value} = useDarkMode(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\ngsap.to('.activeNavMenu', {\r\n    color:'#ec0634',\r\n    borderBottom:\"2px solid #00068A\",\r\n    ease: Power3.easeInOut\r\n})\r\n\r\n    }, [activeUrl]);\r\n\r\n    //user info\r\n    const {userData:{member:{ProfileImage, FirstName, LastName, Bitcoin,Ethereum,Dash,BNB, Ripple, Tron, Aave, BitcoinCash,Token}}, loading} = props.user\r\n\r\n    const money = Ethereum + Bitcoin + BNB + Dash + Tron + Ripple + Aave + BitcoinCash;\r\n\r\n\r\n    const openMenu = () => {\r\n\r\n        setClosed(!open)\r\n        if (open) {\r\n            gsap.to('.mobileNav', {\r\n                y: '0%',\r\n\r\n            })\r\n        } else {\r\n            gsap.to('.mobileNav', {\r\n                y: '-80%',\r\n                ease: Power3.easeOut,\r\n\r\n\r\n            })\r\n        }\r\n\r\n//console.clear()\r\n    }\r\n\r\n\r\n    const logout = () =>{\r\n        logoutUser(props.history)\r\n       // console.log(props)\r\n    }\r\n    return (\r\n        <nav className='mobileNav'>\r\n            <ul className='topNav'>\r\n                {\r\n                    NavData.map((({link, linkClassName, icon, title, click}, index) => (\r\n\r\n                          click ? (<li key={index} className={`${linkClassName} ${link === activeUrl[1] ? 'activeNavMenu' : ''}`} onClick={() => openMenu()}>\r\n\r\n\r\n                                  {icon}\r\n\r\n                          </li>) : (<li key={index} className={`${linkClassName} ${link === activeUrl[1] ? 'activeNavMenu' : ''}`}>\r\n\r\n                              <NavLink to={`/${link}`} title={title}>\r\n                                  {icon}\r\n                              </NavLink>\r\n                          </li>)\r\n\r\n\r\n                    )))\r\n                }\r\n            </ul>\r\n            <nav className='miniNav'>\r\n                <section className='miniMenu'>\r\n                    <ul>\r\n                        {\r\n                            SubNavDATA.map((({link, linkClassName, icon, click, title}, index) => (\r\n                             click ?   ( <li key={index} onClick={logout}>\r\n\r\n\r\n                                        <div className='linkIcon'>\r\n                                            {icon}\r\n                                        </div>\r\n                                        <div className='linkTitle'>\r\n                                            {link}\r\n                                        </div>\r\n\r\n                                </li>) : (<li key={index}>\r\n\r\n                                 <NavLink to={`/${link}`} title={title}>\r\n                                     <div className='linkIcon'>\r\n                                         {icon}\r\n                                     </div>\r\n                                     <div className='linkTitle'>\r\n                                         {link}\r\n                                     </div>\r\n                                 </NavLink>\r\n\r\n                             </li>)\r\n                            )))\r\n                        }\r\n\r\n                    </ul>\r\n                </section>\r\n                <section className='miniProfile'>\r\n                    <div className=\"navMiniProfileWrap\">\r\n                        <NavLink to='/setting' className='userImg'>\r\n\r\n                            {\r\n                                ProfileImage === null ? (\r\n                                        <img src={'https://www.flaticon.com/svg/static/icons/svg/1077/1077114.svg'}  alt='user'/>)\r\n                                    :\r\n\r\n                                    <img src={userImage} alt='user'/>\r\n\r\n                            }\r\n                        </NavLink>\r\n                        <div className='infoWrap'>\r\n                            <section className='userName'>\r\n                                {\r\n                                    LastName\r\n                                }\r\n                                &nbsp;\r\n                                {FirstName}\r\n                            </section>\r\n                            <section className='balance'>\r\n                                ₦{money}\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <section className='toggle'>\r\n                        <button className='themeToggle' onClick={darkMode.toggle}>\r\n                            {value ? <FontAwesomeIcon icon={faSun}/> : <FontAwesomeIcon icon={faMoon}/>}\r\n\r\n                        </button>\r\n                    </section>\r\n\r\n                </section>\r\n            </nav>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n\r\n});\r\nMobileNav.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    getUserData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapActionsToProps = {\r\n    logoutUser,\r\n    getUserData\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps) (MobileNav);\r\n\r\n","C:\\reactApp\\truzactv1\\src\\components\\Tab.js",["245","246"],"import React, {useState, useEffect, useCallback} from 'react';\r\nimport TabPane from \"./Tab-Pane\";\r\nimport '../Style/Tab.scss'\r\nimport { TimelineLite} from \"gsap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowUp, faCreditCard, faExchangeAlt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Tab = (props) => {\r\n    const {children} = props;\r\n    const [tabHeader, setTabHeader] = useState([]);\r\n    const [childContent, setChildContent] = useState({});\r\n    const [active, setActive] = useState(\"\");\r\n    let t1 = new TimelineLite();\r\n    useEffect(() => {\r\n        const headers = [];\r\n        const childCnt = {};\r\n        React.Children.forEach(children, (element) => {\r\n            if (!React.isValidElement(element)) return;\r\n            const {name} = element.props;\r\n            headers.push(name);\r\n            childCnt[name] = element.props.children;\r\n        });\r\n        setTabHeader(headers);\r\n        setActive(headers[0]);\r\n        setChildContent({...childCnt});\r\n        //console.log(childCnt);\r\n\r\n    }, [props, children]);\r\n\r\n\r\n\r\n    const changeTab = (name) => {\r\n        setActive(name);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [active]);\r\n    return (\r\n        <div className=\"tabs\">\r\n            <ul className=\"tab-header\">\r\n                {tabHeader.map((item) => (\r\n                    <li\r\n                        onClick={() => changeTab(item)}\r\n                        key={item}\r\n                        className={item === active ? \"tab-active\" : \"\"}\r\n                    >\r\n                        {item === 'Deposit' ? (\r\n                            <div><FontAwesomeIcon icon={faArrowUp}/>&nbsp; {item}</div>) : item === 'Withdrawal' ?\r\n                            (<div><FontAwesomeIcon icon={faCreditCard}/>&nbsp; {item}</div>) : item === 'Buy/Sell' ? (\r\n                                <div><FontAwesomeIcon icon={faExchangeAlt}/> &nbsp; {item}</div>) : item}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {Object.keys(childContent).map((key) => {\r\n                    if (key === active) {\r\n                        return <div className=\"tab-child\">{childContent[key]}</div>;\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTab.propTypes = {\r\n    children: function (props, propName, componentName) {\r\n        const prop = props[propName];\r\n\r\n        let error = null;\r\n        React.Children.forEach(prop, function (child) {\r\n            if (child.type !== TabPane) {\r\n                error = new Error(\r\n                    \"`\" + componentName + \"` children should be of type `TabPane`.\"\r\n                );\r\n            }\r\n        });\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default Tab;\r\n",["247","248"],"C:\\reactApp\\truzactv1\\src\\redux\\actions\\dataActions.js",[],"C:\\reactApp\\truzactv1\\src\\components\\Menu.js",["249","250","251","252"],"import React, {useEffect} from 'react';\r\nimport '../Style/menu.scss'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faHome,\r\n    faTachometerAlt,\r\n    faKey,\r\n    faVrCardboard, faChartArea, faWallet, faMoneyCheck, faPiggyBank, faCommentDots, faShieldAlt, faCogs\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport brandLogo from '../assets/img/truzact logo favicon.png'\r\nimport {Link} from \"react-router-dom\";\r\nimport userImage from '../assets/img/me.jpg'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {logoutUser} from \"../redux/actions/userActions\";\r\n\r\n\r\nimport { SkeletonText } from \"@chakra-ui/react\"\r\nimport {gsap, Power3} from \"gsap\";\r\n\r\n\r\nconst Menu = (props) => {\r\n    const activeUrl = window.location.pathname.split('/')\r\n   /* useEffect(() => {\r\n\r\n        gsap.to('.activeMenu', {\r\n            borderLeft:\"1px solid #00068A\",\r\n            ease: Power3.easeInOut\r\n        })\r\n\r\n    }, [activeUrl]);*/\r\n\r\n\r\n    const {logoutUser} = props\r\n    //user info\r\n    const {user, loading} = props\r\nconst {userData} = props.user\r\nconst {member: { LastName, ProfileImage}} = props.user.userData\r\n\r\n    return (\r\n        <menu className='menuWrap'>\r\n            <div className='menuCont'>\r\n                <div className='primaryMenu'>\r\n                    <section className='top'>\r\n\r\n                    </section>\r\n                    <section className='main'>\r\n                        <ul>\r\n                            <li className={`${'home' === activeUrl[1] ? 'activeMenu' : ''}`}>\r\n                                <Link to='' title='Home'>\r\n                                    <FontAwesomeIcon icon={faHome}/>\r\n                                </Link>\r\n                            </li>\r\n\r\n                            <li className='active'>\r\n                                <Link to='/' title='Dashboard'>\r\n                                    <FontAwesomeIcon icon={faTachometerAlt}/>\r\n                                </Link>\r\n                            </li>\r\n\r\n                            <li title='Token'>\r\n                                <Link to='/'>\r\n                                    <FontAwesomeIcon icon={faKey}/>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/' title='Merchant'>\r\n                                    <FontAwesomeIcon icon={faVrCardboard}/>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </section>\r\n\r\n                </div>\r\n                <div className='menu'>\r\n\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n\r\n                    <section className='userMini'>\r\n                        <section className='profileImg'>\r\n                            {\r\n                                Object.keys(userData).length > 0 && ProfileImage === null ? (\r\n                                        <img src={'https://www.flaticon.com/svg/static/icons/svg/1077/1077114.svg'}  alt='user'/>)\r\n                                    :\r\n\r\n                                    <img src={userImage} alt='user'/>\r\n\r\n                            }\r\n                        </section>\r\n                        <section className='userName'>\r\n\r\n                            {\r\n                                loading?  <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" /> :      ( LastName.toUpperCase())\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                        </section>\r\n                    </section>\r\n\r\n                    <section className='mainMenu'>\r\n                        <div className='menuTitle'>\r\n                            Menu\r\n                        </div>\r\n\r\n                        <menu className=''>\r\n                            <Link to='/dashboard' className={`${'dashboard' === activeUrl[1] ? 'activeMenu' : ''}`}>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faChartArea}/>\r\n                                </section>\r\n                                <section className='text' >\r\n                                    Dashboard\r\n                                </section>\r\n                            </Link>\r\n\r\n                            <Link to='/wallets'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faWallet}/>\r\n                                </section>\r\n                                <section className='text'>\r\n                                    Wallets\r\n                                </section>\r\n                            </Link>\r\n\r\n                            <Link to='/transactions'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faMoneyCheck}/>\r\n                                </section>\r\n                                <section className='text'>\r\n                                    Transactions\r\n                                </section>\r\n                            </Link>\r\n\r\n                            <Link to='/savings'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faPiggyBank}/>\r\n                                </section>\r\n                                <section className='text'>\r\n                                    My savings\r\n                                </section>\r\n                            </Link>\r\n                        </menu>\r\n\r\n                        <div className='subMenu'>\r\n\r\n                            <Link to='/setting'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faCogs}/>\r\n                                </section>\r\n                                <section className='text' >\r\n                                    Settings\r\n                                </section>\r\n                            </Link>\r\n\r\n                            <Link to='/security' title='Security'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faShieldAlt}/>\r\n                                </section>\r\n                                <section className='text'>\r\n                                    Security\r\n                                </section>\r\n                            </Link>\r\n\r\n                            <Link to='/transactions'>\r\n                                <section className='icon'>\r\n                                    <FontAwesomeIcon icon={faCommentDots}/>\r\n                                </section>\r\n                                <section className='text'>\r\n                                    Support\r\n                                </section>\r\n                            </Link>\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n<button className='logoutBtn' onClick={logoutUser}>Logout</button>\r\n                </div>\r\n            </div>\r\n\r\n        </menu>\r\n    );\r\n};\r\n\r\nMenu.prototypes = {\r\n    data: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    user: state.user\r\n})\r\nconst mapActionsToProps = {\r\n    logoutUser\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Menu);\r\n","C:\\reactApp\\truzactv1\\src\\components\\Portfolio.js",[],"C:\\reactApp\\truzactv1\\src\\components\\PriceHistory.js",["253","254"],"import React, {useEffect, useState, useMemo} from 'react';\r\nimport axios from 'axios'\r\nimport NumberFormat from \"react-number-format\";\r\nimport Dropdown from './DropDown'\r\nimport {Tooltip} from \"@chakra-ui/react\"\r\n\r\nconst cryptoList = [\r\n    {\r\n        key: 'Bitcoin',\r\n        text: 'BTC',\r\n        value: 'https://min-api.cryptocompare.com/data/histoday?fsym=BTC&tsym=USD&limit=10',\r\n        image:  'https://app.roqqu.com/static/media/btc.d9c1768c.png',\r\n    },\r\n    {\r\n        key: 'Ethereum',\r\n        text: 'ETH',\r\n        value: 'https://min-api.cryptocompare.com/data/histoday?fsym=ETH&tsym=USD&limit=10',\r\n        image: 'https://app.roqqu.com/static/media/eth.73579dcc.png'\r\n    },\r\n    {\r\n        key: 'Aave',\r\n        text: 'Aave',\r\n        value: 'https://min-api.cryptocompare.com/data/histoday?fsym=AAVE&tsym=USD&limit=10',\r\n        image: 'https://aave.com/static/media/aave.aadf289d.svg',\r\n    },\r\n  /*  {\r\n        key: 'TRON',\r\n        text: 'TRON',\r\n        value: 'https://min-api.cryptocompare.com/data/histoday?fsym=CTE&tsym=USD&limit=10',\r\n        image: 'https://app.roqqu.com/static/media/xrp.6684b41b.png',\r\n    },*/{\r\n        key: 'BITCOIN CASH',\r\n        text: 'BTC CASH',\r\n        value: 'https://min-api.cryptocompare.com/data/histoday?fsym=BCH&tsym=USD&limit=10',\r\n        image: 'https://app.roqqu.com/static/media/eos.5929c6f7.png',\r\n    },\r\n]\r\n\r\nconst PriceHistory = () => {\r\n\r\n    const [priceData, setPriceData] = useState([])\r\n    const [todayPrice, setTodayPrice] = useState(new Map());\r\n    const [value, setValue] = useState('https://min-api.cryptocompare.com/data/histoday?fsym=BTC&tsym=USD&limit=10');\r\n    const [cryptoName, setCryptoKey] = useState('Bitcoin');\r\n\r\n\r\n    const getData = (url) => {\r\n\r\n        axios.get(url)\r\n            .then((res) => {\r\n\r\n                setPriceData(res.data.Data);\r\n                // console.log(priceData)\r\n\r\n                // console.log(res.data.Data.slice(-1)[0])\r\n                setTodayPrice(res.data.Data.slice(-1)[0])\r\n\r\n            }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useMemo( () => {\r\n        getData(value);\r\n    }, [value])\r\n\r\n    // console.log(todayPrice)\r\n    const increase = todayPrice.high - todayPrice.low;\r\n    const priceChange = increase / 100\r\n\r\n    const onChange = (event) => {\r\n\r\n\r\n        console.log(event.target.value)\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='priceHistory'>\r\n            <div className='message'>\r\n                <small>Updated a few seconds ago</small>\r\n            </div>\r\n            <div className='price'>\r\n             {/*   <div className='cryptoLogo'>\r\n                    <img alt='btc logo' src='https://app.roqqu.com/static/media/btc.d9c1768c.png'/>\r\n                </div>*/}\r\n                <Dropdown\r\n                    placeholder=\"Select Vegetable\"\r\n                    value={value}\r\n                    cryptoName={cryptoName}\r\n                    handleName={v => setCryptoKey(v)}\r\n                    onChange={v => setValue(v)}\r\n                    options={cryptoList}\r\n                />\r\n\r\n                <br/>\r\n                <div className='amount'>\r\n\r\n                    <NumberFormat value={todayPrice.high} displayType={'text'} thousandSeparator={true} prefix={'$'}/>\r\n                </div>\r\n                <div className={priceChange > 1 ? 'priceChangeUp' : 'priceChangeDown'}>\r\n\r\n\r\n                    {priceChange.toFixed(2)}%\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='chart'>\r\n                {\r\n                    priceData.map((({time, low, high}, index) => (\r\n\r\n                        <Tooltip key={index} hasArrow label={high} bg=\"blue.600\">\r\n                            <div className='bars'\r\n                                 style={{height: (Math.round(high * 100) / todayPrice.high + '%')}}>\r\n                                <div className='barBatch'>\r\n                                    ${high}\r\n                                </div>\r\n                            </div>\r\n                        </Tooltip>\r\n\r\n                    )))\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PriceHistory;\r\n","C:\\reactApp\\truzactv1\\src\\Data-Center\\MobileMenu.js",[],"C:\\reactApp\\truzactv1\\src\\components\\AuthRoute.js",[],"C:\\reactApp\\truzactv1\\src\\components\\AuthRouteUser.js",["255"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRouteUser = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            authenticated === false ? <Redirect to=\"/auth\" /> : <Component {...props} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(AuthRouteUser);\r\n","C:\\reactApp\\truzactv1\\src\\components\\Modal.js",["256","257"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport '../Style/Modal.scss'\r\n\r\n\r\n\r\nconst CloseButton = styled.svg`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  right: 18px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n  background-color:#c7c7c8;\r\n  padding:10px;\r\n  border-radius:100%\r\n`\r\n\r\nconst Title = styled.h5`\r\n  text-align: center;\r\n  margin-top: 6px;\r\n  margin-left: 6px;\r\n`\r\n\r\n\r\n\r\nconst pageAnimation = {\r\n    type:\"spring\",\r\n}\r\n\r\nconst modalVariant = {\r\n    initial: { opacity: 0 },\r\n    isOpen: { opacity: 1 },\r\n    exit: { opacity: 0 },\r\n}\r\nconst containerVariant = {\r\n    initial: { top: '-50%', transition: { type: 'spring' } },\r\n    isOpen: { top: '50%' },\r\n    exit: { top: '-50%' },\r\n}\r\nconst Modal = ({ title, onClose, children, width, height, myClassName, isOpen, selectedFile }) => {\r\n\r\n    return (\r\n        <AnimatePresence>\r\n            {isOpen && (\r\n                <motion.div className='modalOverlay'\r\n                    initial={'initial'}\r\n                    animate={'isOpen'}\r\n                    exit={'exit'}\r\n                    variants={modalVariant}\r\n                >\r\n                    <motion.div className={`modalContainer ${myClassName}`} variants={containerVariant}>\r\n                        <CloseButton\r\n                            onClick={onClose}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            viewBox=\"0 0 20.39 20.39\"\r\n                        >\r\n                            <title>close</title>\r\n                            <line\r\n                                x1=\"19.39\"\r\n                                y1=\"19.39\"\r\n                                x2=\"1\"\r\n                                y2=\"1\"\r\n                                fill=\"none\"\r\n                                stroke=\"#5c3aff\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeMiterlimit=\"10\"\r\n                                strokeWidth=\"2\"\r\n                            />\r\n                            <line\r\n                                x1=\"1\"\r\n                                y1=\"19.39\"\r\n                                x2=\"19.39\"\r\n                                y2=\"1\"\r\n                                fill=\"none\"\r\n                                stroke=\"#5c3aff\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeMiterlimit=\"10\"\r\n                                strokeWidth=\"2\"\r\n                            />\r\n                        </CloseButton>\r\n                        <Title>{title}</Title>\r\n                        {children}\r\n                    </motion.div>\r\n                </motion.div>\r\n            )}\r\n        </AnimatePresence>\r\n    )\r\n}\r\n\r\nexport default Modal","C:\\reactApp\\truzactv1\\src\\pages\\Save\\Save.js",["258","259","260","261"],"import React, {useState} from 'react';\r\nimport './Save.scss'\r\nimport '../../Style/Responsive/Responsive.Save.scss'\r\nimport Menu from \"../../components/Menu\";\r\nimport {motion} from \"framer-motion\";\r\nimport Notification from \"../../components/Notification\";\r\n\r\nimport {Box, Badge, Divider, List, ListItem, ListIcon,Switch} from \"@chakra-ui/react\"\r\nimport Footer from \"../../components/Footer\";\r\n\r\nimport TextInput from \"../../components/TextInput\";\r\n\r\nimport {CgLock} from \"react-icons/cg\";\r\nimport brandLogo from \"../../assets/img/Truzact logo white horinzontal.png\";\r\nimport MobTop from \"../../components/MobTop\";\r\nimport MobileNav from \"../../components/MobNav\";\r\nimport Modal from \"../../components/Modal\";\r\nimport {MdSettings, MdDateRange} from \"react-icons/md\";\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        x: \"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        y: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        y: \"-10vh\",\r\n    }\r\n}\r\n\r\nconst InnerTransition = {\r\n\r\n    in: {\r\n        opacity: 1,\r\n        x: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        x: \"-50vw\",\r\n    }\r\n}\r\n\r\n\r\nconst Save = (props) => {\r\n\r\n    //tpo lock money\r\n    const [amount, setAmount] = useState('')\r\n    const [duration, setDuration] = useState('')\r\n    const [lockPeriod, setLockPeriod] = useState(null)\r\n    const [payableAmount, setPayableAmount] = useState('')\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n\r\n    const SavingOptions = [\r\n        {\r\n            duration: '1 Month',\r\n            message: 'Earn 0.8% for the duration, paid monthly',\r\n            time: 'monthly',\r\n            percentage: 0.8,\r\n            period: 1\r\n        },\r\n        {\r\n            duration: '3 Month',\r\n            message: 'Earn 3% for the duration, paid monthly',\r\n            time: 'quarterly',\r\n            percentage: 3,\r\n            period: 3\r\n        },\r\n        {\r\n            duration: '6 Month',\r\n            message: 'Earn 7% for the duration, paid monthly',\r\n            time: 'semiannual',\r\n            percentage: 7,\r\n            period: 6\r\n        },\r\n        {\r\n            duration: '12 Month',\r\n            message: 'Earn 15% for the duration, paid monthly',\r\n            time: 'annually',\r\n            percentage: 15,\r\n            period: 12\r\n        }\r\n    ]\r\n\r\n    const validateName = (e, duration, period, percentage) => {\r\n        e.preventDefault()\r\n\r\n        //calculate total amount plus percentage\r\n\r\n        const percentageAmount = (amount / 100) * percentage\r\n        const a = percentageAmount\r\n            const newPayableAmount =  parseInt(amount)+ parseInt(a)\r\n\r\n        console.log(amount)\r\n        console.log(newPayableAmount)\r\n        console.log(percentageAmount)\r\n        console.log(a)\r\n\r\n\r\n        const currentDate = new Date();\r\n\r\n       /* const currentDayOfMonth = currentDate.getDate();\r\n        const currentMonth = currentDate.getMonth(); // Be careful! January is 0, not 1\r\n        const currentYear = currentDate.getFullYear();\r\n\r\n        const dateString = currentDayOfMonth + \"-\" + (currentMonth + 1) + \"-\" + currentYear;\r\n*/\r\n        //properly format date\r\n        const longEnUSFormatter = new Intl.DateTimeFormat('en-US', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        });\r\n\r\n\r\n//\r\n        const d = currentDate.getDate();\r\n        currentDate.setMonth(currentDate.getMonth() + +period);\r\n        if (currentDate.getDate() !== d) {\r\n            currentDate.setDate(0);\r\n        }\r\n        //console.log(addMonths(currentDate, period))\r\n//console.log(duration)\r\n        setModalOpen(!modalOpen)\r\n        // setLockPeriod(currentDate)\r\n        setDuration(duration)\r\n        setPayableAmount(newPayableAmount)\r\n\r\n\r\n//console.log(currentDate)\r\n        setLockPeriod(longEnUSFormatter.format(currentDate));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const addMonths = (date, months) => {\r\n        var d = date.getDate();\r\n        date.setMonth(date.getMonth() + +months);\r\n        if (date.getDate() !== d) {\r\n            date.setDate(0);\r\n        }\r\n        return date;\r\n    }\r\n\r\n    const modalToggle = () => {\r\n\r\n        setModalOpen(!modalOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Modal isOpen={modalOpen} onClose={modalToggle} myClassName='saveModalContainer'>\r\n                <div className='confirmSaving'>\r\n                    <div className='confirmModalContent'>\r\n\r\n\r\n                        <div className='title'>\r\n                            Confirm savings of ₦{amount}\r\n                        </div>\r\n                        <Divider orientation=\"horizontal\"/>\r\n                        <List spacing={3}>\r\n                            <ListItem>\r\n                                <ListIcon as={MdDateRange} color=\"green.500\"/>\r\n                                <span>Duration: </span> {duration}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListIcon color=\"green.500\"/>\r\n                                <span>Release date: </span> {lockPeriod}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListIcon color=\"blue.500\"/>\r\n                                <span>You get:</span> ₦{payableAmount}\r\n                            </ListItem>\r\n                            {/* You can also use custom icons from react-icons */}\r\n                            <ListItem>\r\n                                <small>\r\n                               The funds will be placed under lock and keys for the duration and will\r\n                                become available for withdrawal on the release date, requesting for it sooner will attract a 3% fee\r\n                                </small>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                               <span>By clicking the button below you accept this terms and condition</span>\r\n                            </ListItem>\r\n                            <button className='sendBtn'>\r\n                                Lock <CgLock/>\r\n                            </button>\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Menu/>\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={pageTransition} className='savePage'>\r\n                <Notification/>\r\n\r\n                <div className='savingWrap'>\r\n                    <div className='saveNote'>\r\n                        <Badge variant='subtle' px=\"1\" bg=\"brand.500\" color='white'>Savings</Badge> help you lock down funds in crypto, unaccessible by no one else but you, free from devaluation and depreciation, you also earn monthly up to 15% per anum.\r\n                    </div>\r\n\r\n                    <Box as=\"button\" borderRadius=\"md\" bgGradient=\"linear(to-r, brand.100,purple.500)\" color=\"white\" px={4} h={8} className='optionNote'>\r\n                        Options that fit all budgets\r\n                    </Box>\r\n                    <div className='optionsWrap'>\r\n\r\n\r\n                        {\r\n                            SavingOptions.map((({duration, message, time, period, percentage}, index) => (\r\n\r\n\r\n                                <Box maxW=\"sm\" borderWidth=\"2px\" key={index} borderRadius=\"lg\" className='optionBox'\r\n                                     overflow=\"hidden\">\r\n\r\n                                    <Box p=\"6\">\r\n                                        <Box d=\"flex\" alignItems=\"baseline\">\r\n                                            <Badge variant='outline' px=\"2\" colorScheme=\"blue\">\r\n                                                Duration\r\n                                            </Badge>\r\n                                            <Box\r\n                                                color=\"gray.500\"\r\n                                                fontWeight=\"semibold\"\r\n                                                letterSpacing=\"wide\"\r\n                                                fontSize=\"xs\"\r\n                                                textTransform=\"uppercase\"\r\n                                                ml=\"2\"\r\n                                            >\r\n                                                {\r\n                                                    duration\r\n                                                }\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                        <Box\r\n                                            mt=\"1\"\r\n                                            fontWeight=\"semibold\"\r\n                                            as=\"h5\"\r\n                                        >\r\n                                            {message}\r\n                                        </Box>\r\n\r\n                                        <Box>\r\n\r\n                                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                                                <small>  {time} </small>\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n\r\n                                        <form method='post' action='' className='saveForm'\r\n                                              onSubmit={(event) => validateName(event, duration, period, percentage)}>\r\n\r\n                                            <TextInput label='₦' type='number' placeHolder='Amount'\r\n                                                       handleChange={e => setAmount(e.target.value)} required/>\r\n                                            <Box d=\"flex\" mt=\"2\" alignItems=\"left\">\r\n\r\n                                                <button className='lockMoneyBtn' type='submit'>\r\n                                                    Save <CgLock/>\r\n                                                </button>\r\n                                            </Box>\r\n                                        </form>\r\n\r\n\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                            )))\r\n                        }\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <Footer/>\r\n            </motion.div>\r\n            <div className='mobDash'>\r\n\r\n                <div className='mobileHeader'>\r\n                    <section className='brandLogo'>\r\n                        <img src={brandLogo} alt='brand logo'/>\r\n                    </section>\r\n                </div>\r\n                <MobTop/>\r\n                <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={mobPageTransition} className='mobContent'>\r\n\r\n                    <div className='saveNote'>\r\n                        <Badge variant='subtle' px=\"1\" bg=\"brand.500\" color='white'>Savings</Badge> help you lock down funds in crypto, unaccessible by no one else but you, free from devaluation and depreciation, you also earn monthly up to 15% per anum.\r\n                    </div>\r\n\r\n                    <Box as=\"button\" borderRadius=\"md\" bgGradient=\"linear(to-r, brand.100,purple.500)\" color=\"white\" px={4} h={8} className='optionNote'>\r\n                        Options that fit all budgets\r\n                    </Box>\r\n                    <div className='optionsWrap'>\r\n\r\n\r\n                        {\r\n                            SavingOptions.map((({duration, message, time, period, percentage}, index) => (\r\n\r\n\r\n                                <Box maxW=\"sm\" borderWidth=\"2px\" key={index} borderRadius=\"lg\" className='optionBox'\r\n                                     overflow=\"hidden\">\r\n\r\n                                    <Box p=\"6\">\r\n                                        <Box d=\"flex\" alignItems=\"baseline\">\r\n                                            <Badge variant='outline' px=\"2\" colorScheme=\"blue\" color='brand.100'>\r\n                                                Duration\r\n                                            </Badge>\r\n                                            <Box\r\n                                                color=\"gray.500\"\r\n                                                fontWeight=\"semibold\"\r\n                                                letterSpacing=\"wide\"\r\n                                                fontSize=\"xs\"\r\n                                                textTransform=\"uppercase\"\r\n                                                ml=\"2\"\r\n                                            >\r\n                                                {\r\n                                                    duration\r\n                                                }\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                        <Box\r\n                                            mt=\"1\"\r\n                                            fontWeight=\"semibold\"\r\n                                            as=\"h5\"\r\n                                        >\r\n                                            {message}\r\n                                        </Box>\r\n\r\n                                        <Box>\r\n\r\n                                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                                                <small>  {time} </small>\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n\r\n                                        <form method='post' action='' className='saveForm'\r\n                                              onSubmit={(e) => validateName(e, duration, period, percentage)}>\r\n\r\n                                            <TextInput label='₦' handleChange={e => setAmount(e.target.value)}\r\n                                                       type='number' placeHolder='Amount' required/>\r\n                                            <Box d=\"flex\" mt=\"2\" alignItems=\"left\">\r\n\r\n                                                <button className='lockMoneyBtn' type='submit'>\r\n                                                    Save <CgLock/>\r\n                                                </button>\r\n                                            </Box>\r\n                                        </form>\r\n\r\n\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                            )))\r\n                        }\r\n                    </div>\r\n\r\n\r\n                </motion.div>\r\n\r\n            </div>\r\n            <MobileNav/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Save;\r\n","C:\\reactApp\\truzactv1\\src\\pages\\NotFound\\NotFound.js",[],"C:\\reactApp\\truzactv1\\src\\pages\\BuySell\\BuySell.js",["262","263"],"import React from 'react';\r\nimport Menu from \"../../components/Menu\";\r\nimport {motion} from \"framer-motion\";\r\nimport Notification from \"../../components/Notification\";\r\n\r\nconst pageAnimation = {\r\n    type:\"spring\",\r\n}\r\n\r\n\r\nconst mobPageTransition = {\r\n\r\n    in:{\r\n        opacity:1,\r\n        x:0,\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        x:\"10vw\",\r\n    }\r\n}\r\n\r\nconst pageTransition = {\r\n\r\n    in:{\r\n        opacity:1,\r\n        y:0\r\n    },\r\n    out:{\r\n        opacity:0,\r\n        y:\"-10vh\",\r\n    }\r\n}\r\n\r\n\r\n\r\nconst BuySell = () => {\r\n    return (\r\n        <div className='app'>\r\n            <Menu/>\r\n\r\n            <motion.div exit=\"out\" initial=\"out\" animate=\"in\" variants={pageTransition} className='BuySell'>\r\n\r\n                <Notification/>\r\n       </motion.div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuySell;\r\n","C:\\reactApp\\truzactv1\\src\\components\\DropDown.js",["264"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport '../Style/Dropdown.scss'\r\nconst Dropdown = ({ value, cryptoName, options, handleImg, placeholder = \"Select\", onChange }) => {\r\n    const node = useRef();\r\n\r\n    const [open, setOpen] = useState(false);\r\nconst [crypto, setCrypto] = useState(cryptoName)\r\nconst [cryptoImage, setCryptoImage] = useState('https://app.roqqu.com/static/media/btc.d9c1768c.png')\r\n    const handleClickOutside = e => {\r\n        console.log(\"clicking anywhere\");\r\n        if (node.current.contains(e.target)) {\r\n            // inside click\r\n            return;\r\n        }\r\n        // outside click\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (selectedValue, selectedKey,selectedCryptoImage) => {\r\n        onChange(selectedValue);\r\n        setCrypto(selectedKey)\r\n        setCryptoImage(selectedCryptoImage)\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n        } else {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [open]);\r\n\r\n    return (\r\n        <div ref={node} className=\"dropdown\">\r\n            <button className=\"dropdown-toggler\" onClick={e => setOpen(!open)}>\r\n              <img src={cryptoImage} className='cryptoImg'/> {crypto}\r\n            </button>\r\n            {open && (\r\n                <ul className=\"dropdown-menu\">\r\n                    {options.map(opt => (\r\n                        <li className=\"dropdown-menu-item\" onClick={e => handleChange(opt.value, opt.key, opt.image)}>\r\n                          <img alt='crypto' className='cryptoImg' src={opt.image}/>  {opt.key}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dropdown;\r\n",{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":2,"column":39,"nodeType":"271","messageId":"272","endLine":2,"endColumn":46},{"ruleId":"269","severity":1,"message":"273","line":2,"column":48,"nodeType":"271","messageId":"272","endLine":2,"endColumn":59},{"ruleId":"269","severity":1,"message":"274","line":11,"column":9,"nodeType":"271","messageId":"272","endLine":11,"endColumn":14},{"ruleId":"269","severity":1,"message":"275","line":13,"column":9,"nodeType":"271","messageId":"272","endLine":13,"endColumn":26},{"ruleId":"269","severity":1,"message":"276","line":28,"column":7,"nodeType":"271","messageId":"272","endLine":28,"endColumn":15},{"ruleId":"269","severity":1,"message":"277","line":11,"column":18,"nodeType":"271","messageId":"272","endLine":11,"endColumn":29},{"ruleId":"269","severity":1,"message":"278","line":10,"column":9,"nodeType":"271","messageId":"272","endLine":10,"endColumn":24},{"ruleId":"269","severity":1,"message":"279","line":11,"column":9,"nodeType":"271","messageId":"272","endLine":11,"endColumn":15},{"ruleId":"269","severity":1,"message":"280","line":55,"column":92,"nodeType":"271","messageId":"272","endLine":55,"endColumn":99},{"ruleId":"269","severity":1,"message":"281","line":1,"column":25,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"282","line":56,"column":11,"nodeType":"271","messageId":"272","endLine":56,"endColumn":16},{"ruleId":"269","severity":1,"message":"283","line":75,"column":38,"nodeType":"271","messageId":"272","endLine":75,"endColumn":45},{"ruleId":"269","severity":1,"message":"284","line":75,"column":55,"nodeType":"271","messageId":"272","endLine":75,"endColumn":62},{"ruleId":"269","severity":1,"message":"285","line":75,"column":64,"nodeType":"271","messageId":"272","endLine":75,"endColumn":70},{"ruleId":"286","severity":1,"message":"287","line":74,"column":8,"nodeType":"288","endLine":74,"endColumn":16,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":77,"column":47,"nodeType":"292","messageId":"293","endLine":77,"endColumn":48,"suggestions":"294"},{"ruleId":"290","severity":1,"message":"295","line":78,"column":66,"nodeType":"292","messageId":"293","endLine":78,"endColumn":67,"suggestions":"296"},{"ruleId":"290","severity":1,"message":"291","line":78,"column":83,"nodeType":"292","messageId":"293","endLine":78,"endColumn":84,"suggestions":"297"},{"ruleId":"290","severity":1,"message":"291","line":81,"column":47,"nodeType":"292","messageId":"293","endLine":81,"endColumn":48,"suggestions":"298"},{"ruleId":"290","severity":1,"message":"295","line":82,"column":65,"nodeType":"292","messageId":"293","endLine":82,"endColumn":66,"suggestions":"299"},{"ruleId":"290","severity":1,"message":"291","line":82,"column":82,"nodeType":"292","messageId":"293","endLine":82,"endColumn":83,"suggestions":"300"},{"ruleId":"269","severity":1,"message":"301","line":24,"column":9,"nodeType":"271","messageId":"272","endLine":24,"endColumn":29},{"ruleId":"269","severity":1,"message":"302","line":25,"column":8,"nodeType":"271","messageId":"272","endLine":25,"endColumn":15},{"ruleId":"269","severity":1,"message":"303","line":30,"column":10,"nodeType":"271","messageId":"272","endLine":30,"endColumn":16},{"ruleId":"269","severity":1,"message":"304","line":30,"column":18,"nodeType":"271","messageId":"272","endLine":30,"endColumn":29},{"ruleId":"269","severity":1,"message":"270","line":34,"column":9,"nodeType":"271","messageId":"272","endLine":34,"endColumn":16},{"ruleId":"269","severity":1,"message":"305","line":72,"column":12,"nodeType":"271","messageId":"272","endLine":72,"endColumn":16},{"ruleId":"286","severity":1,"message":"306","line":87,"column":8,"nodeType":"288","endLine":87,"endColumn":10,"suggestions":"307"},{"ruleId":"269","severity":1,"message":"308","line":90,"column":30,"nodeType":"271","messageId":"272","endLine":90,"endColumn":32},{"ruleId":"269","severity":1,"message":"309","line":90,"column":148,"nodeType":"271","messageId":"272","endLine":90,"endColumn":153},{"ruleId":"269","severity":1,"message":"310","line":43,"column":7,"nodeType":"271","messageId":"272","endLine":43,"endColumn":20},{"ruleId":"269","severity":1,"message":"311","line":75,"column":19,"nodeType":"271","messageId":"272","endLine":75,"endColumn":27},{"ruleId":"269","severity":1,"message":"280","line":81,"column":22,"nodeType":"271","messageId":"272","endLine":81,"endColumn":29},{"ruleId":"269","severity":1,"message":"312","line":88,"column":11,"nodeType":"271","messageId":"272","endLine":88,"endColumn":20},{"ruleId":"269","severity":1,"message":"313","line":92,"column":11,"nodeType":"271","messageId":"272","endLine":92,"endColumn":15},{"ruleId":"269","severity":1,"message":"314","line":61,"column":12,"nodeType":"271","messageId":"272","endLine":61,"endColumn":18},{"ruleId":"269","severity":1,"message":"315","line":70,"column":15,"nodeType":"271","messageId":"272","endLine":70,"endColumn":25},{"ruleId":"286","severity":1,"message":"306","line":96,"column":8,"nodeType":"288","endLine":96,"endColumn":10,"suggestions":"316"},{"ruleId":"269","severity":1,"message":"317","line":3,"column":5,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"318","line":1,"column":50,"nodeType":"271","messageId":"272","endLine":1,"endColumn":60},{"ruleId":"269","severity":1,"message":"319","line":1,"column":62,"nodeType":"271","messageId":"272","endLine":1,"endColumn":74},{"ruleId":"320","severity":1,"message":"321","line":12,"column":1,"nodeType":"322","endLine":39,"endColumn":2},{"ruleId":"269","severity":1,"message":"302","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":3,"column":15,"nodeType":"271","messageId":"272","endLine":3,"endColumn":22},{"ruleId":"269","severity":1,"message":"323","line":18,"column":12,"nodeType":"271","messageId":"272","endLine":18,"endColumn":21},{"ruleId":"269","severity":1,"message":"324","line":18,"column":23,"nodeType":"271","messageId":"272","endLine":18,"endColumn":35},{"ruleId":"269","severity":1,"message":"325","line":4,"column":9,"nodeType":"271","messageId":"272","endLine":4,"endColumn":21},{"ruleId":"269","severity":1,"message":"326","line":4,"column":33,"nodeType":"271","messageId":"272","endLine":4,"endColumn":43},{"ruleId":"269","severity":1,"message":"302","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":15},{"ruleId":"269","severity":1,"message":"327","line":15,"column":9,"nodeType":"271","messageId":"272","endLine":15,"endColumn":16},{"ruleId":"269","severity":1,"message":"309","line":36,"column":124,"nodeType":"271","messageId":"272","endLine":36,"endColumn":129},{"ruleId":"269","severity":1,"message":"280","line":36,"column":133,"nodeType":"271","messageId":"272","endLine":36,"endColumn":140},{"ruleId":"269","severity":1,"message":"328","line":1,"column":37,"nodeType":"271","messageId":"272","endLine":1,"endColumn":48},{"ruleId":"269","severity":1,"message":"329","line":14,"column":9,"nodeType":"271","messageId":"272","endLine":14,"endColumn":11},{"ruleId":"265","replacedBy":"330"},{"ruleId":"267","replacedBy":"331"},{"ruleId":"269","severity":1,"message":"281","line":1,"column":16,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"332","line":19,"column":9,"nodeType":"271","messageId":"272","endLine":19,"endColumn":13},{"ruleId":"269","severity":1,"message":"333","line":19,"column":15,"nodeType":"271","messageId":"272","endLine":19,"endColumn":21},{"ruleId":"269","severity":1,"message":"334","line":36,"column":12,"nodeType":"271","messageId":"272","endLine":36,"endColumn":16},{"ruleId":"269","severity":1,"message":"281","line":1,"column":16,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"335","line":73,"column":11,"nodeType":"271","messageId":"272","endLine":73,"endColumn":19},{"ruleId":"269","severity":1,"message":"336","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":17},{"ruleId":"269","severity":1,"message":"337","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"310","line":28,"column":7,"nodeType":"271","messageId":"272","endLine":28,"endColumn":20},{"ruleId":"269","severity":1,"message":"338","line":8,"column":55,"nodeType":"271","messageId":"272","endLine":8,"endColumn":61},{"ruleId":"269","severity":1,"message":"339","line":18,"column":9,"nodeType":"271","messageId":"272","endLine":18,"endColumn":19},{"ruleId":"269","severity":1,"message":"340","line":45,"column":7,"nodeType":"271","messageId":"272","endLine":45,"endColumn":22},{"ruleId":"269","severity":1,"message":"341","line":153,"column":11,"nodeType":"271","messageId":"272","endLine":153,"endColumn":20},{"ruleId":"269","severity":1,"message":"310","line":6,"column":7,"nodeType":"271","messageId":"272","endLine":6,"endColumn":20},{"ruleId":"269","severity":1,"message":"342","line":11,"column":7,"nodeType":"271","messageId":"272","endLine":11,"endColumn":24},{"ruleId":"343","severity":1,"message":"344","line":41,"column":15,"nodeType":"345","endLine":41,"endColumn":61},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'store' is defined but never used.","'SET_AUTHENTICATED' is defined but never used.","'NotFound' is assigned a value but never used.","'SET_SUCCESS' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faLock' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'toast' is assigned a value but never used.","'kycData' is assigned a value but never used.","'allData' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading' and 'toast'. Either include them or remove the dependency array.","ArrayExpression",["348"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["349","350"],"Unnecessary escape character: \\[.",["351","352"],["353","354"],["355","356"],["357","358"],["359","360"],"'HiOutlineViewGridAdd' is defined but never used.","'userImg' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 't1'. Either include it or remove the dependency array.",["361"],"'ID' is assigned a value but never used.","'Token' is assigned a value but never used.","'pageAnimation' is assigned a value but never used.","'setValue' is assigned a value but never used.","'activeUrl' is assigned a value but never used.","'date' is assigned a value but never used.","'number' is assigned a value but never used.","'intervalId' is assigned a value but never used.",["362"],"'LOADING_DATA' is defined but never used.","'SET_ERRORS' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'placement' is assigned a value but never used.","'setPlacement' is assigned a value but never used.","'faArrowsAltV' is defined but never used.","'faReplyAll' is defined but never used.","'history' is assigned a value but never used.","'useCallback' is defined but never used.","'t1' is assigned a value but never used.",["346"],["347"],"'gsap' is defined but never used.","'Power3' is defined but never used.","'user' is assigned a value but never used.","'onChange' is assigned a value but never used.","'PropTypes' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'MdSettings' is defined but never used.","'InnerTransition' is assigned a value but never used.","'addMonths' is assigned a value but never used.","'mobPageTransition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"messageId":"365","fix":"366","desc":"367"},{"messageId":"368","fix":"369","desc":"370"},{"messageId":"365","fix":"371","desc":"367"},{"messageId":"368","fix":"372","desc":"370"},{"messageId":"365","fix":"373","desc":"367"},{"messageId":"368","fix":"374","desc":"370"},{"messageId":"365","fix":"375","desc":"367"},{"messageId":"368","fix":"376","desc":"370"},{"messageId":"365","fix":"377","desc":"367"},{"messageId":"368","fix":"378","desc":"370"},{"messageId":"365","fix":"379","desc":"367"},{"messageId":"368","fix":"380","desc":"370"},{"desc":"381","fix":"382"},{"desc":"381","fix":"383"},"Update the dependencies array to be: [errors, loading, toast]",{"range":"384","text":"385"},"removeEscape",{"range":"386","text":"387"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"388","text":"389"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"390","text":"387"},{"range":"391","text":"389"},{"range":"392","text":"387"},{"range":"393","text":"389"},{"range":"394","text":"387"},{"range":"395","text":"389"},{"range":"396","text":"387"},{"range":"397","text":"389"},{"range":"398","text":"387"},{"range":"399","text":"389"},"Update the dependencies array to be: [t1]",{"range":"400","text":"401"},{"range":"402","text":"401"},[2257,2265],"[errors, loading, toast]",[2355,2356],"",[2355,2355],"\\",[2447,2448],[2447,2447],[2464,2465],[2464,2464],[2552,2553],[2552,2552],[2642,2643],[2642,2642],[2659,2660],[2659,2659],[2507,2509],"[t1]",[3965,3967]]